
masterSPI.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000030  00800200  000007bc  00000850  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000007bc  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  00800230  00800230  00000880  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000880  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000008dc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000038  00000000  00000000  0000091c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000fb6  00000000  00000000  00000954  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000d84  00000000  00000000  0000190a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000040e  00000000  00000000  0000268e  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000064  00000000  00000000  00002a9c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000064d  00000000  00000000  00002b00  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000012c  00000000  00000000  0000314d  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000028  00000000  00000000  00003279  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	8e c0       	rjmp	.+284    	; 0x122 <__bad_interrupt>
   6:	00 00       	nop
   8:	8c c0       	rjmp	.+280    	; 0x122 <__bad_interrupt>
   a:	00 00       	nop
   c:	8a c0       	rjmp	.+276    	; 0x122 <__bad_interrupt>
   e:	00 00       	nop
  10:	88 c0       	rjmp	.+272    	; 0x122 <__bad_interrupt>
  12:	00 00       	nop
  14:	86 c0       	rjmp	.+268    	; 0x122 <__bad_interrupt>
  16:	00 00       	nop
  18:	84 c0       	rjmp	.+264    	; 0x122 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	82 c0       	rjmp	.+260    	; 0x122 <__bad_interrupt>
  1e:	00 00       	nop
  20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
  22:	00 00       	nop
  24:	7e c0       	rjmp	.+252    	; 0x122 <__bad_interrupt>
  26:	00 00       	nop
  28:	7c c0       	rjmp	.+248    	; 0x122 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	7a c0       	rjmp	.+244    	; 0x122 <__bad_interrupt>
  2e:	00 00       	nop
  30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
  32:	00 00       	nop
  34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
  36:	00 00       	nop
  38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	72 c0       	rjmp	.+228    	; 0x122 <__bad_interrupt>
  3e:	00 00       	nop
  40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
  42:	00 00       	nop
  44:	6e c0       	rjmp	.+220    	; 0x122 <__bad_interrupt>
  46:	00 00       	nop
  48:	6c c0       	rjmp	.+216    	; 0x122 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
  4e:	00 00       	nop
  50:	68 c0       	rjmp	.+208    	; 0x122 <__bad_interrupt>
  52:	00 00       	nop
  54:	66 c0       	rjmp	.+204    	; 0x122 <__bad_interrupt>
  56:	00 00       	nop
  58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	62 c0       	rjmp	.+196    	; 0x122 <__bad_interrupt>
  5e:	00 00       	nop
  60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
  62:	00 00       	nop
  64:	5e c0       	rjmp	.+188    	; 0x122 <__bad_interrupt>
  66:	00 00       	nop
  68:	5c c0       	rjmp	.+184    	; 0x122 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
  6e:	00 00       	nop
  70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
  72:	00 00       	nop
  74:	56 c0       	rjmp	.+172    	; 0x122 <__bad_interrupt>
  76:	00 00       	nop
  78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
  7e:	00 00       	nop
  80:	50 c0       	rjmp	.+160    	; 0x122 <__bad_interrupt>
  82:	00 00       	nop
  84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
  86:	00 00       	nop
  88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
  8e:	00 00       	nop
  90:	48 c0       	rjmp	.+144    	; 0x122 <__bad_interrupt>
  92:	00 00       	nop
  94:	46 c0       	rjmp	.+140    	; 0x122 <__bad_interrupt>
  96:	00 00       	nop
  98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	3c c0       	rjmp	.+120    	; 0x122 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	34 c0       	rjmp	.+104    	; 0x122 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	32 c0       	rjmp	.+100    	; 0x122 <__bad_interrupt>
  be:	00 00       	nop
  c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	2c c0       	rjmp	.+88     	; 0x122 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	2a c0       	rjmp	.+84     	; 0x122 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	28 c0       	rjmp	.+80     	; 0x122 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	24 c0       	rjmp	.+72     	; 0x122 <__bad_interrupt>
  da:	00 00       	nop
  dc:	22 c0       	rjmp	.+68     	; 0x122 <__bad_interrupt>
  de:	00 00       	nop
  e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	ec eb       	ldi	r30, 0xBC	; 188
  fc:	f7 e0       	ldi	r31, 0x07	; 7
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	a0 33       	cpi	r26, 0x30	; 48
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
 10e:	22 e0       	ldi	r18, 0x02	; 2
 110:	a0 e3       	ldi	r26, 0x30	; 48
 112:	b2 e0       	ldi	r27, 0x02	; 2
 114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
 116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
 118:	a6 33       	cpi	r26, 0x36	; 54
 11a:	b2 07       	cpc	r27, r18
 11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
 11e:	1f d0       	rcall	.+62     	; 0x15e <main>
 120:	4b c3       	rjmp	.+1686   	; 0x7b8 <_exit>

00000122 <__bad_interrupt>:
 122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <USART_init>:
#include <stdio.h>

static void USART_init(uint16_t ubrr)
{
    /* Set baud rate in the USART Baud Rate Registers (UBRR) */
    UBRR0H = (unsigned char) (ubrr >> 8);
 124:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7c00c5>
    UBRR0L = (unsigned char) ubrr;
 128:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7c00c4>
    
    /* Enable receiver and transmitter on RX0 and TX0 */
    UCSR0B |= (1 << RXEN0) | (1 << TXEN0); 
 12c:	e1 ec       	ldi	r30, 0xC1	; 193
 12e:	f0 e0       	ldi	r31, 0x00	; 0
 130:	80 81       	ld	r24, Z
 132:	88 61       	ori	r24, 0x18	; 24
 134:	80 83       	st	Z, r24
    
    /* Set frame format: 8 bit data, 2 stop bit */
    UCSR0C |= (1 << USBS0) | (3 << UCSZ00);
 136:	e2 ec       	ldi	r30, 0xC2	; 194
 138:	f0 e0       	ldi	r31, 0x00	; 0
 13a:	80 81       	ld	r24, Z
 13c:	8e 60       	ori	r24, 0x0E	; 14
 13e:	80 83       	st	Z, r24
 140:	08 95       	ret

00000142 <USART_Transmit>:
}

static void USART_Transmit(unsigned char data, FILE *stream)
{
    /* Wait until the transmit buffer is empty*/
    while(!(UCSR0A & (1 << UDRE0)))
 142:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7c00c0>
 146:	95 ff       	sbrs	r25, 5
 148:	fc cf       	rjmp	.-8      	; 0x142 <USART_Transmit>
    {
        ;
    }
    
    /* Puts the data into a buffer, then sends/transmits the data */
    UDR0 = data;
 14a:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7c00c6>
 14e:	08 95       	ret

00000150 <USART_Receive>:
}

static char USART_Receive(FILE *stream)
{
    /* Wait until the transmit buffer is empty*/
    while(!(UCSR0A & (1 << UDRE0)))
 150:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7c00c0>
 154:	85 ff       	sbrs	r24, 5
 156:	fc cf       	rjmp	.-8      	; 0x150 <USART_Receive>
    {
        ;
    }
    
    /* Get the received data from the buffer */
    return UDR0;
 158:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7c00c6>
}
 15c:	08 95       	ret

0000015e <main>:
// Setup the stream functions for UART
FILE uart_output = FDEV_SETUP_STREAM(USART_Transmit, NULL, _FDEV_SETUP_WRITE);
FILE uart_input = FDEV_SETUP_STREAM(NULL, USART_Receive, _FDEV_SETUP_READ);

int main(void)
{
 15e:	cf 93       	push	r28
 160:	df 93       	push	r29
 162:	cd b7       	in	r28, 0x3d	; 61
 164:	de b7       	in	r29, 0x3e	; 62
 166:	a8 97       	sbiw	r28, 0x28	; 40
 168:	0f b6       	in	r0, 0x3f	; 63
 16a:	f8 94       	cli
 16c:	de bf       	out	0x3e, r29	; 62
 16e:	0f be       	out	0x3f, r0	; 63
 170:	cd bf       	out	0x3d, r28	; 61
    /* set SS, MOSI and SCK as output, pins 53 (PB0), 51 (PB2) and 52 (PB1) */
    DDRB |= (1 << PB0) | (1 << PB1) | (1 << PB2); // SS as output
 172:	84 b1       	in	r24, 0x04	; 4
 174:	87 60       	ori	r24, 0x07	; 7
 176:	84 b9       	out	0x04, r24	; 4
    /* set SPI enable and master/slave select, making MEGA the master */
    SPCR |= (1 << 6) | (1 << 4);
 178:	8c b5       	in	r24, 0x2c	; 44
 17a:	80 65       	ori	r24, 0x50	; 80
 17c:	8c bd       	out	0x2c, r24	; 44
    /* set SPI clock rate to 1 MHz */
    SPCR |= (1 << 0);
 17e:	8c b5       	in	r24, 0x2c	; 44
 180:	81 60       	ori	r24, 0x01	; 1
 182:	8c bd       	out	0x2c, r24	; 44

    // initialize the UART with 9600 BAUD
    USART_init(MYUBRR);
 184:	87 e6       	ldi	r24, 0x67	; 103
 186:	90 e0       	ldi	r25, 0x00	; 0
 188:	cd df       	rcall	.-102    	; 0x124 <USART_init>
        
    // redirect the stdin and stdout to UART functions
    stdout = &uart_output;
 18a:	e0 e3       	ldi	r30, 0x30	; 48
 18c:	f2 e0       	ldi	r31, 0x02	; 2
 18e:	8e e0       	ldi	r24, 0x0E	; 14
 190:	92 e0       	ldi	r25, 0x02	; 2
 192:	93 83       	std	Z+3, r25	; 0x03
 194:	82 83       	std	Z+2, r24	; 0x02
    stdin = &uart_input;
 196:	80 e0       	ldi	r24, 0x00	; 0
 198:	92 e0       	ldi	r25, 0x02	; 2
 19a:	91 83       	std	Z+1, r25	; 0x01
 19c:	80 83       	st	Z, r24
    
    unsigned char spi_send_data[20] = "master to slave\n";
 19e:	81 e1       	ldi	r24, 0x11	; 17
 1a0:	ec e1       	ldi	r30, 0x1C	; 28
 1a2:	f2 e0       	ldi	r31, 0x02	; 2
 1a4:	de 01       	movw	r26, r28
 1a6:	11 96       	adiw	r26, 0x01	; 1
 1a8:	01 90       	ld	r0, Z+
 1aa:	0d 92       	st	X+, r0
 1ac:	8a 95       	dec	r24
 1ae:	e1 f7       	brne	.-8      	; 0x1a8 <main+0x4a>
 1b0:	fe 01       	movw	r30, r28
 1b2:	72 96       	adiw	r30, 0x12	; 18
 1b4:	83 e0       	ldi	r24, 0x03	; 3
 1b6:	df 01       	movw	r26, r30
 1b8:	1d 92       	st	X+, r1
 1ba:	8a 95       	dec	r24
 1bc:	e9 f7       	brne	.-6      	; 0x1b8 <main+0x5a>
    
    /* send message to slave and receive message from slave */
    while (1) 
    {
        /* send byte to slave and receive a byte from slave */
        PORTB &= ~(1 << PB0); // SS LOW
 1be:	85 b1       	in	r24, 0x05	; 5
 1c0:	8e 7f       	andi	r24, 0xFE	; 254
 1c2:	85 b9       	out	0x05, r24	; 5
            
        for(int8_t spi_data_index = 0; spi_data_index < sizeof(spi_send_data); spi_data_index++)
 1c4:	80 e0       	ldi	r24, 0x00	; 0
 1c6:	21 c0       	rjmp	.+66     	; 0x20a <main+0xac>
        {
                
            SPDR = spi_send_data[spi_data_index]; // send byte using SPI data register
 1c8:	08 2e       	mov	r0, r24
 1ca:	00 0c       	add	r0, r0
 1cc:	99 0b       	sbc	r25, r25
 1ce:	e1 e0       	ldi	r30, 0x01	; 1
 1d0:	f0 e0       	ldi	r31, 0x00	; 0
 1d2:	ec 0f       	add	r30, r28
 1d4:	fd 1f       	adc	r31, r29
 1d6:	e8 0f       	add	r30, r24
 1d8:	f9 1f       	adc	r31, r25
 1da:	30 81       	ld	r19, Z
 1dc:	3e bd       	out	0x2e, r19	; 46
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1de:	ba e1       	ldi	r27, 0x1A	; 26
 1e0:	ba 95       	dec	r27
 1e2:	f1 f7       	brne	.-4      	; 0x1e0 <main+0x82>
 1e4:	00 c0       	rjmp	.+0      	; 0x1e6 <main+0x88>
            _delay_us(5);
            while(!(SPSR & (1 << SPIF)))
 1e6:	0d b4       	in	r0, 0x2d	; 45
 1e8:	07 fe       	sbrs	r0, 7
 1ea:	fd cf       	rjmp	.-6      	; 0x1e6 <main+0x88>
 1ec:	3a e1       	ldi	r19, 0x1A	; 26
 1ee:	3a 95       	dec	r19
 1f0:	f1 f7       	brne	.-4      	; 0x1ee <main+0x90>
 1f2:	00 c0       	rjmp	.+0      	; 0x1f4 <main+0x96>
            {
                /* wait until the transmission is complete */
                ;
            }
            _delay_us(5);
            spi_receive_data[spi_data_index - 1] = SPDR; // receive byte from the SPI data register
 1f4:	01 97       	sbiw	r24, 0x01	; 1
 1f6:	3e b5       	in	r19, 0x2e	; 46
 1f8:	e5 e1       	ldi	r30, 0x15	; 21
 1fa:	f0 e0       	ldi	r31, 0x00	; 0
 1fc:	ec 0f       	add	r30, r28
 1fe:	fd 1f       	adc	r31, r29
 200:	e8 0f       	add	r30, r24
 202:	f9 1f       	adc	r31, r25
 204:	30 83       	st	Z, r19
    while (1) 
    {
        /* send byte to slave and receive a byte from slave */
        PORTB &= ~(1 << PB0); // SS LOW
            
        for(int8_t spi_data_index = 0; spi_data_index < sizeof(spi_send_data); spi_data_index++)
 206:	81 e0       	ldi	r24, 0x01	; 1
 208:	82 0f       	add	r24, r18
 20a:	28 2f       	mov	r18, r24
 20c:	84 31       	cpi	r24, 0x14	; 20
 20e:	e0 f2       	brcs	.-72     	; 0x1c8 <main+0x6a>
            _delay_us(5);
            spi_receive_data[spi_data_index - 1] = SPDR; // receive byte from the SPI data register
            
        }
            
        PORTB |= (1 << PB0); // SS HIGH
 210:	85 b1       	in	r24, 0x05	; 5
 212:	81 60       	ori	r24, 0x01	; 1
 214:	85 b9       	out	0x05, r24	; 5
        
        printf(spi_receive_data);
 216:	ce 01       	movw	r24, r28
 218:	45 96       	adiw	r24, 0x15	; 21
 21a:	9f 93       	push	r25
 21c:	8f 93       	push	r24
 21e:	0c d0       	rcall	.+24     	; 0x238 <printf>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 220:	8f ef       	ldi	r24, 0xFF	; 255
 222:	97 ea       	ldi	r25, 0xA7	; 167
 224:	a1 e6       	ldi	r26, 0x61	; 97
 226:	81 50       	subi	r24, 0x01	; 1
 228:	90 40       	sbci	r25, 0x00	; 0
 22a:	a0 40       	sbci	r26, 0x00	; 0
 22c:	e1 f7       	brne	.-8      	; 0x226 <main+0xc8>
 22e:	00 c0       	rjmp	.+0      	; 0x230 <main+0xd2>
 230:	00 00       	nop
 232:	0f 90       	pop	r0
 234:	0f 90       	pop	r0
 236:	c3 cf       	rjmp	.-122    	; 0x1be <main+0x60>

00000238 <printf>:
 238:	cf 93       	push	r28
 23a:	df 93       	push	r29
 23c:	cd b7       	in	r28, 0x3d	; 61
 23e:	de b7       	in	r29, 0x3e	; 62
 240:	ae 01       	movw	r20, r28
 242:	4a 5f       	subi	r20, 0xFA	; 250
 244:	5f 4f       	sbci	r21, 0xFF	; 255
 246:	fa 01       	movw	r30, r20
 248:	61 91       	ld	r22, Z+
 24a:	71 91       	ld	r23, Z+
 24c:	af 01       	movw	r20, r30
 24e:	80 91 32 02 	lds	r24, 0x0232	; 0x800232 <__data_end+0x2>
 252:	90 91 33 02 	lds	r25, 0x0233	; 0x800233 <__data_end+0x3>
 256:	03 d0       	rcall	.+6      	; 0x25e <vfprintf>
 258:	df 91       	pop	r29
 25a:	cf 91       	pop	r28
 25c:	08 95       	ret

0000025e <vfprintf>:
 25e:	2f 92       	push	r2
 260:	3f 92       	push	r3
 262:	4f 92       	push	r4
 264:	5f 92       	push	r5
 266:	6f 92       	push	r6
 268:	7f 92       	push	r7
 26a:	8f 92       	push	r8
 26c:	9f 92       	push	r9
 26e:	af 92       	push	r10
 270:	bf 92       	push	r11
 272:	cf 92       	push	r12
 274:	df 92       	push	r13
 276:	ef 92       	push	r14
 278:	ff 92       	push	r15
 27a:	0f 93       	push	r16
 27c:	1f 93       	push	r17
 27e:	cf 93       	push	r28
 280:	df 93       	push	r29
 282:	cd b7       	in	r28, 0x3d	; 61
 284:	de b7       	in	r29, 0x3e	; 62
 286:	2b 97       	sbiw	r28, 0x0b	; 11
 288:	0f b6       	in	r0, 0x3f	; 63
 28a:	f8 94       	cli
 28c:	de bf       	out	0x3e, r29	; 62
 28e:	0f be       	out	0x3f, r0	; 63
 290:	cd bf       	out	0x3d, r28	; 61
 292:	6c 01       	movw	r12, r24
 294:	7b 01       	movw	r14, r22
 296:	8a 01       	movw	r16, r20
 298:	fc 01       	movw	r30, r24
 29a:	17 82       	std	Z+7, r1	; 0x07
 29c:	16 82       	std	Z+6, r1	; 0x06
 29e:	83 81       	ldd	r24, Z+3	; 0x03
 2a0:	81 ff       	sbrs	r24, 1
 2a2:	bf c1       	rjmp	.+894    	; 0x622 <__LOCK_REGION_LENGTH__+0x222>
 2a4:	ce 01       	movw	r24, r28
 2a6:	01 96       	adiw	r24, 0x01	; 1
 2a8:	3c 01       	movw	r6, r24
 2aa:	f6 01       	movw	r30, r12
 2ac:	93 81       	ldd	r25, Z+3	; 0x03
 2ae:	f7 01       	movw	r30, r14
 2b0:	93 fd       	sbrc	r25, 3
 2b2:	85 91       	lpm	r24, Z+
 2b4:	93 ff       	sbrs	r25, 3
 2b6:	81 91       	ld	r24, Z+
 2b8:	7f 01       	movw	r14, r30
 2ba:	88 23       	and	r24, r24
 2bc:	09 f4       	brne	.+2      	; 0x2c0 <vfprintf+0x62>
 2be:	ad c1       	rjmp	.+858    	; 0x61a <__LOCK_REGION_LENGTH__+0x21a>
 2c0:	85 32       	cpi	r24, 0x25	; 37
 2c2:	39 f4       	brne	.+14     	; 0x2d2 <vfprintf+0x74>
 2c4:	93 fd       	sbrc	r25, 3
 2c6:	85 91       	lpm	r24, Z+
 2c8:	93 ff       	sbrs	r25, 3
 2ca:	81 91       	ld	r24, Z+
 2cc:	7f 01       	movw	r14, r30
 2ce:	85 32       	cpi	r24, 0x25	; 37
 2d0:	21 f4       	brne	.+8      	; 0x2da <vfprintf+0x7c>
 2d2:	b6 01       	movw	r22, r12
 2d4:	90 e0       	ldi	r25, 0x00	; 0
 2d6:	d6 d1       	rcall	.+940    	; 0x684 <fputc>
 2d8:	e8 cf       	rjmp	.-48     	; 0x2aa <vfprintf+0x4c>
 2da:	91 2c       	mov	r9, r1
 2dc:	21 2c       	mov	r2, r1
 2de:	31 2c       	mov	r3, r1
 2e0:	ff e1       	ldi	r31, 0x1F	; 31
 2e2:	f3 15       	cp	r31, r3
 2e4:	d8 f0       	brcs	.+54     	; 0x31c <vfprintf+0xbe>
 2e6:	8b 32       	cpi	r24, 0x2B	; 43
 2e8:	79 f0       	breq	.+30     	; 0x308 <vfprintf+0xaa>
 2ea:	38 f4       	brcc	.+14     	; 0x2fa <vfprintf+0x9c>
 2ec:	80 32       	cpi	r24, 0x20	; 32
 2ee:	79 f0       	breq	.+30     	; 0x30e <vfprintf+0xb0>
 2f0:	83 32       	cpi	r24, 0x23	; 35
 2f2:	a1 f4       	brne	.+40     	; 0x31c <vfprintf+0xbe>
 2f4:	23 2d       	mov	r18, r3
 2f6:	20 61       	ori	r18, 0x10	; 16
 2f8:	1d c0       	rjmp	.+58     	; 0x334 <vfprintf+0xd6>
 2fa:	8d 32       	cpi	r24, 0x2D	; 45
 2fc:	61 f0       	breq	.+24     	; 0x316 <vfprintf+0xb8>
 2fe:	80 33       	cpi	r24, 0x30	; 48
 300:	69 f4       	brne	.+26     	; 0x31c <vfprintf+0xbe>
 302:	23 2d       	mov	r18, r3
 304:	21 60       	ori	r18, 0x01	; 1
 306:	16 c0       	rjmp	.+44     	; 0x334 <vfprintf+0xd6>
 308:	83 2d       	mov	r24, r3
 30a:	82 60       	ori	r24, 0x02	; 2
 30c:	38 2e       	mov	r3, r24
 30e:	e3 2d       	mov	r30, r3
 310:	e4 60       	ori	r30, 0x04	; 4
 312:	3e 2e       	mov	r3, r30
 314:	2a c0       	rjmp	.+84     	; 0x36a <vfprintf+0x10c>
 316:	f3 2d       	mov	r31, r3
 318:	f8 60       	ori	r31, 0x08	; 8
 31a:	1d c0       	rjmp	.+58     	; 0x356 <vfprintf+0xf8>
 31c:	37 fc       	sbrc	r3, 7
 31e:	2d c0       	rjmp	.+90     	; 0x37a <vfprintf+0x11c>
 320:	20 ed       	ldi	r18, 0xD0	; 208
 322:	28 0f       	add	r18, r24
 324:	2a 30       	cpi	r18, 0x0A	; 10
 326:	40 f0       	brcs	.+16     	; 0x338 <vfprintf+0xda>
 328:	8e 32       	cpi	r24, 0x2E	; 46
 32a:	b9 f4       	brne	.+46     	; 0x35a <vfprintf+0xfc>
 32c:	36 fc       	sbrc	r3, 6
 32e:	75 c1       	rjmp	.+746    	; 0x61a <__LOCK_REGION_LENGTH__+0x21a>
 330:	23 2d       	mov	r18, r3
 332:	20 64       	ori	r18, 0x40	; 64
 334:	32 2e       	mov	r3, r18
 336:	19 c0       	rjmp	.+50     	; 0x36a <vfprintf+0x10c>
 338:	36 fe       	sbrs	r3, 6
 33a:	06 c0       	rjmp	.+12     	; 0x348 <vfprintf+0xea>
 33c:	8a e0       	ldi	r24, 0x0A	; 10
 33e:	98 9e       	mul	r9, r24
 340:	20 0d       	add	r18, r0
 342:	11 24       	eor	r1, r1
 344:	92 2e       	mov	r9, r18
 346:	11 c0       	rjmp	.+34     	; 0x36a <vfprintf+0x10c>
 348:	ea e0       	ldi	r30, 0x0A	; 10
 34a:	2e 9e       	mul	r2, r30
 34c:	20 0d       	add	r18, r0
 34e:	11 24       	eor	r1, r1
 350:	22 2e       	mov	r2, r18
 352:	f3 2d       	mov	r31, r3
 354:	f0 62       	ori	r31, 0x20	; 32
 356:	3f 2e       	mov	r3, r31
 358:	08 c0       	rjmp	.+16     	; 0x36a <vfprintf+0x10c>
 35a:	8c 36       	cpi	r24, 0x6C	; 108
 35c:	21 f4       	brne	.+8      	; 0x366 <vfprintf+0x108>
 35e:	83 2d       	mov	r24, r3
 360:	80 68       	ori	r24, 0x80	; 128
 362:	38 2e       	mov	r3, r24
 364:	02 c0       	rjmp	.+4      	; 0x36a <vfprintf+0x10c>
 366:	88 36       	cpi	r24, 0x68	; 104
 368:	41 f4       	brne	.+16     	; 0x37a <vfprintf+0x11c>
 36a:	f7 01       	movw	r30, r14
 36c:	93 fd       	sbrc	r25, 3
 36e:	85 91       	lpm	r24, Z+
 370:	93 ff       	sbrs	r25, 3
 372:	81 91       	ld	r24, Z+
 374:	7f 01       	movw	r14, r30
 376:	81 11       	cpse	r24, r1
 378:	b3 cf       	rjmp	.-154    	; 0x2e0 <vfprintf+0x82>
 37a:	98 2f       	mov	r25, r24
 37c:	9f 7d       	andi	r25, 0xDF	; 223
 37e:	95 54       	subi	r25, 0x45	; 69
 380:	93 30       	cpi	r25, 0x03	; 3
 382:	28 f4       	brcc	.+10     	; 0x38e <vfprintf+0x130>
 384:	0c 5f       	subi	r16, 0xFC	; 252
 386:	1f 4f       	sbci	r17, 0xFF	; 255
 388:	9f e3       	ldi	r25, 0x3F	; 63
 38a:	99 83       	std	Y+1, r25	; 0x01
 38c:	0d c0       	rjmp	.+26     	; 0x3a8 <vfprintf+0x14a>
 38e:	83 36       	cpi	r24, 0x63	; 99
 390:	31 f0       	breq	.+12     	; 0x39e <vfprintf+0x140>
 392:	83 37       	cpi	r24, 0x73	; 115
 394:	71 f0       	breq	.+28     	; 0x3b2 <vfprintf+0x154>
 396:	83 35       	cpi	r24, 0x53	; 83
 398:	09 f0       	breq	.+2      	; 0x39c <vfprintf+0x13e>
 39a:	55 c0       	rjmp	.+170    	; 0x446 <__LOCK_REGION_LENGTH__+0x46>
 39c:	20 c0       	rjmp	.+64     	; 0x3de <vfprintf+0x180>
 39e:	f8 01       	movw	r30, r16
 3a0:	80 81       	ld	r24, Z
 3a2:	89 83       	std	Y+1, r24	; 0x01
 3a4:	0e 5f       	subi	r16, 0xFE	; 254
 3a6:	1f 4f       	sbci	r17, 0xFF	; 255
 3a8:	88 24       	eor	r8, r8
 3aa:	83 94       	inc	r8
 3ac:	91 2c       	mov	r9, r1
 3ae:	53 01       	movw	r10, r6
 3b0:	12 c0       	rjmp	.+36     	; 0x3d6 <vfprintf+0x178>
 3b2:	28 01       	movw	r4, r16
 3b4:	f2 e0       	ldi	r31, 0x02	; 2
 3b6:	4f 0e       	add	r4, r31
 3b8:	51 1c       	adc	r5, r1
 3ba:	f8 01       	movw	r30, r16
 3bc:	a0 80       	ld	r10, Z
 3be:	b1 80       	ldd	r11, Z+1	; 0x01
 3c0:	36 fe       	sbrs	r3, 6
 3c2:	03 c0       	rjmp	.+6      	; 0x3ca <vfprintf+0x16c>
 3c4:	69 2d       	mov	r22, r9
 3c6:	70 e0       	ldi	r23, 0x00	; 0
 3c8:	02 c0       	rjmp	.+4      	; 0x3ce <vfprintf+0x170>
 3ca:	6f ef       	ldi	r22, 0xFF	; 255
 3cc:	7f ef       	ldi	r23, 0xFF	; 255
 3ce:	c5 01       	movw	r24, r10
 3d0:	4e d1       	rcall	.+668    	; 0x66e <strnlen>
 3d2:	4c 01       	movw	r8, r24
 3d4:	82 01       	movw	r16, r4
 3d6:	f3 2d       	mov	r31, r3
 3d8:	ff 77       	andi	r31, 0x7F	; 127
 3da:	3f 2e       	mov	r3, r31
 3dc:	15 c0       	rjmp	.+42     	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
 3de:	28 01       	movw	r4, r16
 3e0:	22 e0       	ldi	r18, 0x02	; 2
 3e2:	42 0e       	add	r4, r18
 3e4:	51 1c       	adc	r5, r1
 3e6:	f8 01       	movw	r30, r16
 3e8:	a0 80       	ld	r10, Z
 3ea:	b1 80       	ldd	r11, Z+1	; 0x01
 3ec:	36 fe       	sbrs	r3, 6
 3ee:	03 c0       	rjmp	.+6      	; 0x3f6 <vfprintf+0x198>
 3f0:	69 2d       	mov	r22, r9
 3f2:	70 e0       	ldi	r23, 0x00	; 0
 3f4:	02 c0       	rjmp	.+4      	; 0x3fa <vfprintf+0x19c>
 3f6:	6f ef       	ldi	r22, 0xFF	; 255
 3f8:	7f ef       	ldi	r23, 0xFF	; 255
 3fa:	c5 01       	movw	r24, r10
 3fc:	2d d1       	rcall	.+602    	; 0x658 <strnlen_P>
 3fe:	4c 01       	movw	r8, r24
 400:	f3 2d       	mov	r31, r3
 402:	f0 68       	ori	r31, 0x80	; 128
 404:	3f 2e       	mov	r3, r31
 406:	82 01       	movw	r16, r4
 408:	33 fc       	sbrc	r3, 3
 40a:	19 c0       	rjmp	.+50     	; 0x43e <__LOCK_REGION_LENGTH__+0x3e>
 40c:	82 2d       	mov	r24, r2
 40e:	90 e0       	ldi	r25, 0x00	; 0
 410:	88 16       	cp	r8, r24
 412:	99 06       	cpc	r9, r25
 414:	a0 f4       	brcc	.+40     	; 0x43e <__LOCK_REGION_LENGTH__+0x3e>
 416:	b6 01       	movw	r22, r12
 418:	80 e2       	ldi	r24, 0x20	; 32
 41a:	90 e0       	ldi	r25, 0x00	; 0
 41c:	33 d1       	rcall	.+614    	; 0x684 <fputc>
 41e:	2a 94       	dec	r2
 420:	f5 cf       	rjmp	.-22     	; 0x40c <__LOCK_REGION_LENGTH__+0xc>
 422:	f5 01       	movw	r30, r10
 424:	37 fc       	sbrc	r3, 7
 426:	85 91       	lpm	r24, Z+
 428:	37 fe       	sbrs	r3, 7
 42a:	81 91       	ld	r24, Z+
 42c:	5f 01       	movw	r10, r30
 42e:	b6 01       	movw	r22, r12
 430:	90 e0       	ldi	r25, 0x00	; 0
 432:	28 d1       	rcall	.+592    	; 0x684 <fputc>
 434:	21 10       	cpse	r2, r1
 436:	2a 94       	dec	r2
 438:	21 e0       	ldi	r18, 0x01	; 1
 43a:	82 1a       	sub	r8, r18
 43c:	91 08       	sbc	r9, r1
 43e:	81 14       	cp	r8, r1
 440:	91 04       	cpc	r9, r1
 442:	79 f7       	brne	.-34     	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
 444:	e1 c0       	rjmp	.+450    	; 0x608 <__LOCK_REGION_LENGTH__+0x208>
 446:	84 36       	cpi	r24, 0x64	; 100
 448:	11 f0       	breq	.+4      	; 0x44e <__LOCK_REGION_LENGTH__+0x4e>
 44a:	89 36       	cpi	r24, 0x69	; 105
 44c:	39 f5       	brne	.+78     	; 0x49c <__LOCK_REGION_LENGTH__+0x9c>
 44e:	f8 01       	movw	r30, r16
 450:	37 fe       	sbrs	r3, 7
 452:	07 c0       	rjmp	.+14     	; 0x462 <__LOCK_REGION_LENGTH__+0x62>
 454:	60 81       	ld	r22, Z
 456:	71 81       	ldd	r23, Z+1	; 0x01
 458:	82 81       	ldd	r24, Z+2	; 0x02
 45a:	93 81       	ldd	r25, Z+3	; 0x03
 45c:	0c 5f       	subi	r16, 0xFC	; 252
 45e:	1f 4f       	sbci	r17, 0xFF	; 255
 460:	08 c0       	rjmp	.+16     	; 0x472 <__LOCK_REGION_LENGTH__+0x72>
 462:	60 81       	ld	r22, Z
 464:	71 81       	ldd	r23, Z+1	; 0x01
 466:	07 2e       	mov	r0, r23
 468:	00 0c       	add	r0, r0
 46a:	88 0b       	sbc	r24, r24
 46c:	99 0b       	sbc	r25, r25
 46e:	0e 5f       	subi	r16, 0xFE	; 254
 470:	1f 4f       	sbci	r17, 0xFF	; 255
 472:	f3 2d       	mov	r31, r3
 474:	ff 76       	andi	r31, 0x6F	; 111
 476:	3f 2e       	mov	r3, r31
 478:	97 ff       	sbrs	r25, 7
 47a:	09 c0       	rjmp	.+18     	; 0x48e <__LOCK_REGION_LENGTH__+0x8e>
 47c:	90 95       	com	r25
 47e:	80 95       	com	r24
 480:	70 95       	com	r23
 482:	61 95       	neg	r22
 484:	7f 4f       	sbci	r23, 0xFF	; 255
 486:	8f 4f       	sbci	r24, 0xFF	; 255
 488:	9f 4f       	sbci	r25, 0xFF	; 255
 48a:	f0 68       	ori	r31, 0x80	; 128
 48c:	3f 2e       	mov	r3, r31
 48e:	2a e0       	ldi	r18, 0x0A	; 10
 490:	30 e0       	ldi	r19, 0x00	; 0
 492:	a3 01       	movw	r20, r6
 494:	33 d1       	rcall	.+614    	; 0x6fc <__ultoa_invert>
 496:	88 2e       	mov	r8, r24
 498:	86 18       	sub	r8, r6
 49a:	44 c0       	rjmp	.+136    	; 0x524 <__LOCK_REGION_LENGTH__+0x124>
 49c:	85 37       	cpi	r24, 0x75	; 117
 49e:	31 f4       	brne	.+12     	; 0x4ac <__LOCK_REGION_LENGTH__+0xac>
 4a0:	23 2d       	mov	r18, r3
 4a2:	2f 7e       	andi	r18, 0xEF	; 239
 4a4:	b2 2e       	mov	r11, r18
 4a6:	2a e0       	ldi	r18, 0x0A	; 10
 4a8:	30 e0       	ldi	r19, 0x00	; 0
 4aa:	25 c0       	rjmp	.+74     	; 0x4f6 <__LOCK_REGION_LENGTH__+0xf6>
 4ac:	93 2d       	mov	r25, r3
 4ae:	99 7f       	andi	r25, 0xF9	; 249
 4b0:	b9 2e       	mov	r11, r25
 4b2:	8f 36       	cpi	r24, 0x6F	; 111
 4b4:	c1 f0       	breq	.+48     	; 0x4e6 <__LOCK_REGION_LENGTH__+0xe6>
 4b6:	18 f4       	brcc	.+6      	; 0x4be <__LOCK_REGION_LENGTH__+0xbe>
 4b8:	88 35       	cpi	r24, 0x58	; 88
 4ba:	79 f0       	breq	.+30     	; 0x4da <__LOCK_REGION_LENGTH__+0xda>
 4bc:	ae c0       	rjmp	.+348    	; 0x61a <__LOCK_REGION_LENGTH__+0x21a>
 4be:	80 37       	cpi	r24, 0x70	; 112
 4c0:	19 f0       	breq	.+6      	; 0x4c8 <__LOCK_REGION_LENGTH__+0xc8>
 4c2:	88 37       	cpi	r24, 0x78	; 120
 4c4:	21 f0       	breq	.+8      	; 0x4ce <__LOCK_REGION_LENGTH__+0xce>
 4c6:	a9 c0       	rjmp	.+338    	; 0x61a <__LOCK_REGION_LENGTH__+0x21a>
 4c8:	e9 2f       	mov	r30, r25
 4ca:	e0 61       	ori	r30, 0x10	; 16
 4cc:	be 2e       	mov	r11, r30
 4ce:	b4 fe       	sbrs	r11, 4
 4d0:	0d c0       	rjmp	.+26     	; 0x4ec <__LOCK_REGION_LENGTH__+0xec>
 4d2:	fb 2d       	mov	r31, r11
 4d4:	f4 60       	ori	r31, 0x04	; 4
 4d6:	bf 2e       	mov	r11, r31
 4d8:	09 c0       	rjmp	.+18     	; 0x4ec <__LOCK_REGION_LENGTH__+0xec>
 4da:	34 fe       	sbrs	r3, 4
 4dc:	0a c0       	rjmp	.+20     	; 0x4f2 <__LOCK_REGION_LENGTH__+0xf2>
 4de:	29 2f       	mov	r18, r25
 4e0:	26 60       	ori	r18, 0x06	; 6
 4e2:	b2 2e       	mov	r11, r18
 4e4:	06 c0       	rjmp	.+12     	; 0x4f2 <__LOCK_REGION_LENGTH__+0xf2>
 4e6:	28 e0       	ldi	r18, 0x08	; 8
 4e8:	30 e0       	ldi	r19, 0x00	; 0
 4ea:	05 c0       	rjmp	.+10     	; 0x4f6 <__LOCK_REGION_LENGTH__+0xf6>
 4ec:	20 e1       	ldi	r18, 0x10	; 16
 4ee:	30 e0       	ldi	r19, 0x00	; 0
 4f0:	02 c0       	rjmp	.+4      	; 0x4f6 <__LOCK_REGION_LENGTH__+0xf6>
 4f2:	20 e1       	ldi	r18, 0x10	; 16
 4f4:	32 e0       	ldi	r19, 0x02	; 2
 4f6:	f8 01       	movw	r30, r16
 4f8:	b7 fe       	sbrs	r11, 7
 4fa:	07 c0       	rjmp	.+14     	; 0x50a <__LOCK_REGION_LENGTH__+0x10a>
 4fc:	60 81       	ld	r22, Z
 4fe:	71 81       	ldd	r23, Z+1	; 0x01
 500:	82 81       	ldd	r24, Z+2	; 0x02
 502:	93 81       	ldd	r25, Z+3	; 0x03
 504:	0c 5f       	subi	r16, 0xFC	; 252
 506:	1f 4f       	sbci	r17, 0xFF	; 255
 508:	06 c0       	rjmp	.+12     	; 0x516 <__LOCK_REGION_LENGTH__+0x116>
 50a:	60 81       	ld	r22, Z
 50c:	71 81       	ldd	r23, Z+1	; 0x01
 50e:	80 e0       	ldi	r24, 0x00	; 0
 510:	90 e0       	ldi	r25, 0x00	; 0
 512:	0e 5f       	subi	r16, 0xFE	; 254
 514:	1f 4f       	sbci	r17, 0xFF	; 255
 516:	a3 01       	movw	r20, r6
 518:	f1 d0       	rcall	.+482    	; 0x6fc <__ultoa_invert>
 51a:	88 2e       	mov	r8, r24
 51c:	86 18       	sub	r8, r6
 51e:	fb 2d       	mov	r31, r11
 520:	ff 77       	andi	r31, 0x7F	; 127
 522:	3f 2e       	mov	r3, r31
 524:	36 fe       	sbrs	r3, 6
 526:	0d c0       	rjmp	.+26     	; 0x542 <__LOCK_REGION_LENGTH__+0x142>
 528:	23 2d       	mov	r18, r3
 52a:	2e 7f       	andi	r18, 0xFE	; 254
 52c:	a2 2e       	mov	r10, r18
 52e:	89 14       	cp	r8, r9
 530:	58 f4       	brcc	.+22     	; 0x548 <__LOCK_REGION_LENGTH__+0x148>
 532:	34 fe       	sbrs	r3, 4
 534:	0b c0       	rjmp	.+22     	; 0x54c <__LOCK_REGION_LENGTH__+0x14c>
 536:	32 fc       	sbrc	r3, 2
 538:	09 c0       	rjmp	.+18     	; 0x54c <__LOCK_REGION_LENGTH__+0x14c>
 53a:	83 2d       	mov	r24, r3
 53c:	8e 7e       	andi	r24, 0xEE	; 238
 53e:	a8 2e       	mov	r10, r24
 540:	05 c0       	rjmp	.+10     	; 0x54c <__LOCK_REGION_LENGTH__+0x14c>
 542:	b8 2c       	mov	r11, r8
 544:	a3 2c       	mov	r10, r3
 546:	03 c0       	rjmp	.+6      	; 0x54e <__LOCK_REGION_LENGTH__+0x14e>
 548:	b8 2c       	mov	r11, r8
 54a:	01 c0       	rjmp	.+2      	; 0x54e <__LOCK_REGION_LENGTH__+0x14e>
 54c:	b9 2c       	mov	r11, r9
 54e:	a4 fe       	sbrs	r10, 4
 550:	0f c0       	rjmp	.+30     	; 0x570 <__LOCK_REGION_LENGTH__+0x170>
 552:	fe 01       	movw	r30, r28
 554:	e8 0d       	add	r30, r8
 556:	f1 1d       	adc	r31, r1
 558:	80 81       	ld	r24, Z
 55a:	80 33       	cpi	r24, 0x30	; 48
 55c:	21 f4       	brne	.+8      	; 0x566 <__LOCK_REGION_LENGTH__+0x166>
 55e:	9a 2d       	mov	r25, r10
 560:	99 7e       	andi	r25, 0xE9	; 233
 562:	a9 2e       	mov	r10, r25
 564:	09 c0       	rjmp	.+18     	; 0x578 <__LOCK_REGION_LENGTH__+0x178>
 566:	a2 fe       	sbrs	r10, 2
 568:	06 c0       	rjmp	.+12     	; 0x576 <__LOCK_REGION_LENGTH__+0x176>
 56a:	b3 94       	inc	r11
 56c:	b3 94       	inc	r11
 56e:	04 c0       	rjmp	.+8      	; 0x578 <__LOCK_REGION_LENGTH__+0x178>
 570:	8a 2d       	mov	r24, r10
 572:	86 78       	andi	r24, 0x86	; 134
 574:	09 f0       	breq	.+2      	; 0x578 <__LOCK_REGION_LENGTH__+0x178>
 576:	b3 94       	inc	r11
 578:	a3 fc       	sbrc	r10, 3
 57a:	10 c0       	rjmp	.+32     	; 0x59c <__LOCK_REGION_LENGTH__+0x19c>
 57c:	a0 fe       	sbrs	r10, 0
 57e:	06 c0       	rjmp	.+12     	; 0x58c <__LOCK_REGION_LENGTH__+0x18c>
 580:	b2 14       	cp	r11, r2
 582:	80 f4       	brcc	.+32     	; 0x5a4 <__LOCK_REGION_LENGTH__+0x1a4>
 584:	28 0c       	add	r2, r8
 586:	92 2c       	mov	r9, r2
 588:	9b 18       	sub	r9, r11
 58a:	0d c0       	rjmp	.+26     	; 0x5a6 <__LOCK_REGION_LENGTH__+0x1a6>
 58c:	b2 14       	cp	r11, r2
 58e:	58 f4       	brcc	.+22     	; 0x5a6 <__LOCK_REGION_LENGTH__+0x1a6>
 590:	b6 01       	movw	r22, r12
 592:	80 e2       	ldi	r24, 0x20	; 32
 594:	90 e0       	ldi	r25, 0x00	; 0
 596:	76 d0       	rcall	.+236    	; 0x684 <fputc>
 598:	b3 94       	inc	r11
 59a:	f8 cf       	rjmp	.-16     	; 0x58c <__LOCK_REGION_LENGTH__+0x18c>
 59c:	b2 14       	cp	r11, r2
 59e:	18 f4       	brcc	.+6      	; 0x5a6 <__LOCK_REGION_LENGTH__+0x1a6>
 5a0:	2b 18       	sub	r2, r11
 5a2:	02 c0       	rjmp	.+4      	; 0x5a8 <__LOCK_REGION_LENGTH__+0x1a8>
 5a4:	98 2c       	mov	r9, r8
 5a6:	21 2c       	mov	r2, r1
 5a8:	a4 fe       	sbrs	r10, 4
 5aa:	0f c0       	rjmp	.+30     	; 0x5ca <__LOCK_REGION_LENGTH__+0x1ca>
 5ac:	b6 01       	movw	r22, r12
 5ae:	80 e3       	ldi	r24, 0x30	; 48
 5b0:	90 e0       	ldi	r25, 0x00	; 0
 5b2:	68 d0       	rcall	.+208    	; 0x684 <fputc>
 5b4:	a2 fe       	sbrs	r10, 2
 5b6:	16 c0       	rjmp	.+44     	; 0x5e4 <__LOCK_REGION_LENGTH__+0x1e4>
 5b8:	a1 fc       	sbrc	r10, 1
 5ba:	03 c0       	rjmp	.+6      	; 0x5c2 <__LOCK_REGION_LENGTH__+0x1c2>
 5bc:	88 e7       	ldi	r24, 0x78	; 120
 5be:	90 e0       	ldi	r25, 0x00	; 0
 5c0:	02 c0       	rjmp	.+4      	; 0x5c6 <__LOCK_REGION_LENGTH__+0x1c6>
 5c2:	88 e5       	ldi	r24, 0x58	; 88
 5c4:	90 e0       	ldi	r25, 0x00	; 0
 5c6:	b6 01       	movw	r22, r12
 5c8:	0c c0       	rjmp	.+24     	; 0x5e2 <__LOCK_REGION_LENGTH__+0x1e2>
 5ca:	8a 2d       	mov	r24, r10
 5cc:	86 78       	andi	r24, 0x86	; 134
 5ce:	51 f0       	breq	.+20     	; 0x5e4 <__LOCK_REGION_LENGTH__+0x1e4>
 5d0:	a1 fe       	sbrs	r10, 1
 5d2:	02 c0       	rjmp	.+4      	; 0x5d8 <__LOCK_REGION_LENGTH__+0x1d8>
 5d4:	8b e2       	ldi	r24, 0x2B	; 43
 5d6:	01 c0       	rjmp	.+2      	; 0x5da <__LOCK_REGION_LENGTH__+0x1da>
 5d8:	80 e2       	ldi	r24, 0x20	; 32
 5da:	a7 fc       	sbrc	r10, 7
 5dc:	8d e2       	ldi	r24, 0x2D	; 45
 5de:	b6 01       	movw	r22, r12
 5e0:	90 e0       	ldi	r25, 0x00	; 0
 5e2:	50 d0       	rcall	.+160    	; 0x684 <fputc>
 5e4:	89 14       	cp	r8, r9
 5e6:	30 f4       	brcc	.+12     	; 0x5f4 <__LOCK_REGION_LENGTH__+0x1f4>
 5e8:	b6 01       	movw	r22, r12
 5ea:	80 e3       	ldi	r24, 0x30	; 48
 5ec:	90 e0       	ldi	r25, 0x00	; 0
 5ee:	4a d0       	rcall	.+148    	; 0x684 <fputc>
 5f0:	9a 94       	dec	r9
 5f2:	f8 cf       	rjmp	.-16     	; 0x5e4 <__LOCK_REGION_LENGTH__+0x1e4>
 5f4:	8a 94       	dec	r8
 5f6:	f3 01       	movw	r30, r6
 5f8:	e8 0d       	add	r30, r8
 5fa:	f1 1d       	adc	r31, r1
 5fc:	80 81       	ld	r24, Z
 5fe:	b6 01       	movw	r22, r12
 600:	90 e0       	ldi	r25, 0x00	; 0
 602:	40 d0       	rcall	.+128    	; 0x684 <fputc>
 604:	81 10       	cpse	r8, r1
 606:	f6 cf       	rjmp	.-20     	; 0x5f4 <__LOCK_REGION_LENGTH__+0x1f4>
 608:	22 20       	and	r2, r2
 60a:	09 f4       	brne	.+2      	; 0x60e <__LOCK_REGION_LENGTH__+0x20e>
 60c:	4e ce       	rjmp	.-868    	; 0x2aa <vfprintf+0x4c>
 60e:	b6 01       	movw	r22, r12
 610:	80 e2       	ldi	r24, 0x20	; 32
 612:	90 e0       	ldi	r25, 0x00	; 0
 614:	37 d0       	rcall	.+110    	; 0x684 <fputc>
 616:	2a 94       	dec	r2
 618:	f7 cf       	rjmp	.-18     	; 0x608 <__LOCK_REGION_LENGTH__+0x208>
 61a:	f6 01       	movw	r30, r12
 61c:	86 81       	ldd	r24, Z+6	; 0x06
 61e:	97 81       	ldd	r25, Z+7	; 0x07
 620:	02 c0       	rjmp	.+4      	; 0x626 <__LOCK_REGION_LENGTH__+0x226>
 622:	8f ef       	ldi	r24, 0xFF	; 255
 624:	9f ef       	ldi	r25, 0xFF	; 255
 626:	2b 96       	adiw	r28, 0x0b	; 11
 628:	0f b6       	in	r0, 0x3f	; 63
 62a:	f8 94       	cli
 62c:	de bf       	out	0x3e, r29	; 62
 62e:	0f be       	out	0x3f, r0	; 63
 630:	cd bf       	out	0x3d, r28	; 61
 632:	df 91       	pop	r29
 634:	cf 91       	pop	r28
 636:	1f 91       	pop	r17
 638:	0f 91       	pop	r16
 63a:	ff 90       	pop	r15
 63c:	ef 90       	pop	r14
 63e:	df 90       	pop	r13
 640:	cf 90       	pop	r12
 642:	bf 90       	pop	r11
 644:	af 90       	pop	r10
 646:	9f 90       	pop	r9
 648:	8f 90       	pop	r8
 64a:	7f 90       	pop	r7
 64c:	6f 90       	pop	r6
 64e:	5f 90       	pop	r5
 650:	4f 90       	pop	r4
 652:	3f 90       	pop	r3
 654:	2f 90       	pop	r2
 656:	08 95       	ret

00000658 <strnlen_P>:
 658:	fc 01       	movw	r30, r24
 65a:	05 90       	lpm	r0, Z+
 65c:	61 50       	subi	r22, 0x01	; 1
 65e:	70 40       	sbci	r23, 0x00	; 0
 660:	01 10       	cpse	r0, r1
 662:	d8 f7       	brcc	.-10     	; 0x65a <strnlen_P+0x2>
 664:	80 95       	com	r24
 666:	90 95       	com	r25
 668:	8e 0f       	add	r24, r30
 66a:	9f 1f       	adc	r25, r31
 66c:	08 95       	ret

0000066e <strnlen>:
 66e:	fc 01       	movw	r30, r24
 670:	61 50       	subi	r22, 0x01	; 1
 672:	70 40       	sbci	r23, 0x00	; 0
 674:	01 90       	ld	r0, Z+
 676:	01 10       	cpse	r0, r1
 678:	d8 f7       	brcc	.-10     	; 0x670 <strnlen+0x2>
 67a:	80 95       	com	r24
 67c:	90 95       	com	r25
 67e:	8e 0f       	add	r24, r30
 680:	9f 1f       	adc	r25, r31
 682:	08 95       	ret

00000684 <fputc>:
 684:	0f 93       	push	r16
 686:	1f 93       	push	r17
 688:	cf 93       	push	r28
 68a:	df 93       	push	r29
 68c:	fb 01       	movw	r30, r22
 68e:	23 81       	ldd	r18, Z+3	; 0x03
 690:	21 fd       	sbrc	r18, 1
 692:	03 c0       	rjmp	.+6      	; 0x69a <fputc+0x16>
 694:	8f ef       	ldi	r24, 0xFF	; 255
 696:	9f ef       	ldi	r25, 0xFF	; 255
 698:	2c c0       	rjmp	.+88     	; 0x6f2 <fputc+0x6e>
 69a:	22 ff       	sbrs	r18, 2
 69c:	16 c0       	rjmp	.+44     	; 0x6ca <fputc+0x46>
 69e:	46 81       	ldd	r20, Z+6	; 0x06
 6a0:	57 81       	ldd	r21, Z+7	; 0x07
 6a2:	24 81       	ldd	r18, Z+4	; 0x04
 6a4:	35 81       	ldd	r19, Z+5	; 0x05
 6a6:	42 17       	cp	r20, r18
 6a8:	53 07       	cpc	r21, r19
 6aa:	44 f4       	brge	.+16     	; 0x6bc <fputc+0x38>
 6ac:	a0 81       	ld	r26, Z
 6ae:	b1 81       	ldd	r27, Z+1	; 0x01
 6b0:	9d 01       	movw	r18, r26
 6b2:	2f 5f       	subi	r18, 0xFF	; 255
 6b4:	3f 4f       	sbci	r19, 0xFF	; 255
 6b6:	31 83       	std	Z+1, r19	; 0x01
 6b8:	20 83       	st	Z, r18
 6ba:	8c 93       	st	X, r24
 6bc:	26 81       	ldd	r18, Z+6	; 0x06
 6be:	37 81       	ldd	r19, Z+7	; 0x07
 6c0:	2f 5f       	subi	r18, 0xFF	; 255
 6c2:	3f 4f       	sbci	r19, 0xFF	; 255
 6c4:	37 83       	std	Z+7, r19	; 0x07
 6c6:	26 83       	std	Z+6, r18	; 0x06
 6c8:	14 c0       	rjmp	.+40     	; 0x6f2 <fputc+0x6e>
 6ca:	8b 01       	movw	r16, r22
 6cc:	ec 01       	movw	r28, r24
 6ce:	fb 01       	movw	r30, r22
 6d0:	00 84       	ldd	r0, Z+8	; 0x08
 6d2:	f1 85       	ldd	r31, Z+9	; 0x09
 6d4:	e0 2d       	mov	r30, r0
 6d6:	19 95       	eicall
 6d8:	89 2b       	or	r24, r25
 6da:	e1 f6       	brne	.-72     	; 0x694 <fputc+0x10>
 6dc:	d8 01       	movw	r26, r16
 6de:	16 96       	adiw	r26, 0x06	; 6
 6e0:	8d 91       	ld	r24, X+
 6e2:	9c 91       	ld	r25, X
 6e4:	17 97       	sbiw	r26, 0x07	; 7
 6e6:	01 96       	adiw	r24, 0x01	; 1
 6e8:	17 96       	adiw	r26, 0x07	; 7
 6ea:	9c 93       	st	X, r25
 6ec:	8e 93       	st	-X, r24
 6ee:	16 97       	sbiw	r26, 0x06	; 6
 6f0:	ce 01       	movw	r24, r28
 6f2:	df 91       	pop	r29
 6f4:	cf 91       	pop	r28
 6f6:	1f 91       	pop	r17
 6f8:	0f 91       	pop	r16
 6fa:	08 95       	ret

000006fc <__ultoa_invert>:
 6fc:	fa 01       	movw	r30, r20
 6fe:	aa 27       	eor	r26, r26
 700:	28 30       	cpi	r18, 0x08	; 8
 702:	51 f1       	breq	.+84     	; 0x758 <__ultoa_invert+0x5c>
 704:	20 31       	cpi	r18, 0x10	; 16
 706:	81 f1       	breq	.+96     	; 0x768 <__ultoa_invert+0x6c>
 708:	e8 94       	clt
 70a:	6f 93       	push	r22
 70c:	6e 7f       	andi	r22, 0xFE	; 254
 70e:	6e 5f       	subi	r22, 0xFE	; 254
 710:	7f 4f       	sbci	r23, 0xFF	; 255
 712:	8f 4f       	sbci	r24, 0xFF	; 255
 714:	9f 4f       	sbci	r25, 0xFF	; 255
 716:	af 4f       	sbci	r26, 0xFF	; 255
 718:	b1 e0       	ldi	r27, 0x01	; 1
 71a:	3e d0       	rcall	.+124    	; 0x798 <__ultoa_invert+0x9c>
 71c:	b4 e0       	ldi	r27, 0x04	; 4
 71e:	3c d0       	rcall	.+120    	; 0x798 <__ultoa_invert+0x9c>
 720:	67 0f       	add	r22, r23
 722:	78 1f       	adc	r23, r24
 724:	89 1f       	adc	r24, r25
 726:	9a 1f       	adc	r25, r26
 728:	a1 1d       	adc	r26, r1
 72a:	68 0f       	add	r22, r24
 72c:	79 1f       	adc	r23, r25
 72e:	8a 1f       	adc	r24, r26
 730:	91 1d       	adc	r25, r1
 732:	a1 1d       	adc	r26, r1
 734:	6a 0f       	add	r22, r26
 736:	71 1d       	adc	r23, r1
 738:	81 1d       	adc	r24, r1
 73a:	91 1d       	adc	r25, r1
 73c:	a1 1d       	adc	r26, r1
 73e:	20 d0       	rcall	.+64     	; 0x780 <__ultoa_invert+0x84>
 740:	09 f4       	brne	.+2      	; 0x744 <__ultoa_invert+0x48>
 742:	68 94       	set
 744:	3f 91       	pop	r19
 746:	2a e0       	ldi	r18, 0x0A	; 10
 748:	26 9f       	mul	r18, r22
 74a:	11 24       	eor	r1, r1
 74c:	30 19       	sub	r19, r0
 74e:	30 5d       	subi	r19, 0xD0	; 208
 750:	31 93       	st	Z+, r19
 752:	de f6       	brtc	.-74     	; 0x70a <__ultoa_invert+0xe>
 754:	cf 01       	movw	r24, r30
 756:	08 95       	ret
 758:	46 2f       	mov	r20, r22
 75a:	47 70       	andi	r20, 0x07	; 7
 75c:	40 5d       	subi	r20, 0xD0	; 208
 75e:	41 93       	st	Z+, r20
 760:	b3 e0       	ldi	r27, 0x03	; 3
 762:	0f d0       	rcall	.+30     	; 0x782 <__ultoa_invert+0x86>
 764:	c9 f7       	brne	.-14     	; 0x758 <__ultoa_invert+0x5c>
 766:	f6 cf       	rjmp	.-20     	; 0x754 <__ultoa_invert+0x58>
 768:	46 2f       	mov	r20, r22
 76a:	4f 70       	andi	r20, 0x0F	; 15
 76c:	40 5d       	subi	r20, 0xD0	; 208
 76e:	4a 33       	cpi	r20, 0x3A	; 58
 770:	18 f0       	brcs	.+6      	; 0x778 <__ultoa_invert+0x7c>
 772:	49 5d       	subi	r20, 0xD9	; 217
 774:	31 fd       	sbrc	r19, 1
 776:	40 52       	subi	r20, 0x20	; 32
 778:	41 93       	st	Z+, r20
 77a:	02 d0       	rcall	.+4      	; 0x780 <__ultoa_invert+0x84>
 77c:	a9 f7       	brne	.-22     	; 0x768 <__ultoa_invert+0x6c>
 77e:	ea cf       	rjmp	.-44     	; 0x754 <__ultoa_invert+0x58>
 780:	b4 e0       	ldi	r27, 0x04	; 4
 782:	a6 95       	lsr	r26
 784:	97 95       	ror	r25
 786:	87 95       	ror	r24
 788:	77 95       	ror	r23
 78a:	67 95       	ror	r22
 78c:	ba 95       	dec	r27
 78e:	c9 f7       	brne	.-14     	; 0x782 <__ultoa_invert+0x86>
 790:	00 97       	sbiw	r24, 0x00	; 0
 792:	61 05       	cpc	r22, r1
 794:	71 05       	cpc	r23, r1
 796:	08 95       	ret
 798:	9b 01       	movw	r18, r22
 79a:	ac 01       	movw	r20, r24
 79c:	0a 2e       	mov	r0, r26
 79e:	06 94       	lsr	r0
 7a0:	57 95       	ror	r21
 7a2:	47 95       	ror	r20
 7a4:	37 95       	ror	r19
 7a6:	27 95       	ror	r18
 7a8:	ba 95       	dec	r27
 7aa:	c9 f7       	brne	.-14     	; 0x79e <__ultoa_invert+0xa2>
 7ac:	62 0f       	add	r22, r18
 7ae:	73 1f       	adc	r23, r19
 7b0:	84 1f       	adc	r24, r20
 7b2:	95 1f       	adc	r25, r21
 7b4:	a0 1d       	adc	r26, r0
 7b6:	08 95       	ret

000007b8 <_exit>:
 7b8:	f8 94       	cli

000007ba <__stop_program>:
 7ba:	ff cf       	rjmp	.-2      	; 0x7ba <__stop_program>
