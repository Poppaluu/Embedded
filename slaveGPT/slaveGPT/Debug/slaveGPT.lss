
slaveGPT.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000050  00800100  00000b32  00000bc6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000b32  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000b  00800150  00800150  00000c16  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000c16  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000c74  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000078  00000000  00000000  00000cb0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000ab0  00000000  00000000  00000d28  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000877  00000000  00000000  000017d8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000004be  00000000  00000000  0000204f  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000138  00000000  00000000  00002510  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004a4  00000000  00000000  00002648  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000234  00000000  00000000  00002aec  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000058  00000000  00000000  00002d20  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 89 00 	jmp	0x112	; 0x112 <__vector_10>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 7a 00 	jmp	0xf4	; 0xf4 <__vector_13>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e2 e3       	ldi	r30, 0x32	; 50
  7c:	fb e0       	ldi	r31, 0x0B	; 11
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a0 35       	cpi	r26, 0x50	; 80
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a0 e5       	ldi	r26, 0x50	; 80
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	ab 35       	cpi	r26, 0x5B	; 91
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 da 00 	call	0x1b4	; 0x1b4 <main>
  9e:	0c 94 97 05 	jmp	0xb2e	; 0xb2e <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <initSPI_slave>:

void init_uart(void);

void initSPI_slave()
{
    DDRB = (1 << PB4); // MISO pin as output
  a6:	80 e1       	ldi	r24, 0x10	; 16
  a8:	84 b9       	out	0x04, r24	; 4
    SPCR = (1 << SPE); // Enable SPI
  aa:	80 e4       	ldi	r24, 0x40	; 64
  ac:	8c bd       	out	0x2c, r24	; 44
  ae:	08 95       	ret

000000b0 <init>:
}

void init()
{
    // set trigger pin as output and echo pin as input
    DDRB |= (1 << TRIG_PIN);
  b0:	84 b1       	in	r24, 0x04	; 4
  b2:	81 60       	ori	r24, 0x01	; 1
  b4:	84 b9       	out	0x04, r24	; 4
    DDRB &= ~(1 << ECHO_PIN);
  b6:	84 b1       	in	r24, 0x04	; 4
  b8:	8d 7f       	andi	r24, 0xFD	; 253
  ba:	84 b9       	out	0x04, r24	; 4

    // set timer1 prescaler to 8 and enable overflow interrupt
    TCCR1B |= (1 << CS11);
  bc:	e1 e8       	ldi	r30, 0x81	; 129
  be:	f0 e0       	ldi	r31, 0x00	; 0
  c0:	80 81       	ld	r24, Z
  c2:	82 60       	ori	r24, 0x02	; 2
  c4:	80 83       	st	Z, r24
    TIMSK1 |= (1 << TOIE1);
  c6:	ef e6       	ldi	r30, 0x6F	; 111
  c8:	f0 e0       	ldi	r31, 0x00	; 0
  ca:	80 81       	ld	r24, Z
  cc:	81 60       	ori	r24, 0x01	; 1
  ce:	80 83       	st	Z, r24

    // set SS pin as input with pull-up resistor
    DDRB &= ~(1 << SS_PIN);
  d0:	84 b1       	in	r24, 0x04	; 4
  d2:	8b 7f       	andi	r24, 0xFB	; 251
  d4:	84 b9       	out	0x04, r24	; 4
    PORTB |= (1 << SS_PIN);
  d6:	85 b1       	in	r24, 0x05	; 5
  d8:	84 60       	ori	r24, 0x04	; 4
  da:	85 b9       	out	0x05, r24	; 5
  dc:	08 95       	ret

000000de <sendSPI>:
}

void sendSPI(uint8_t data)
{
    // select slave
    PORTB &= ~(1 << SS_PIN);
  de:	95 b1       	in	r25, 0x05	; 5
  e0:	9b 7f       	andi	r25, 0xFB	; 251
  e2:	95 b9       	out	0x05, r25	; 5

    // send data
    SPDR = data;
  e4:	8e bd       	out	0x2e, r24	; 46

    // wait for transmission to complete
    while (!(SPSR & (1 << SPIF)));
  e6:	0d b4       	in	r0, 0x2d	; 45
  e8:	07 fe       	sbrs	r0, 7
  ea:	fd cf       	rjmp	.-6      	; 0xe6 <sendSPI+0x8>

    // deselect slave
    PORTB |= (1 << SS_PIN);
  ec:	85 b1       	in	r24, 0x05	; 5
  ee:	84 60       	ori	r24, 0x04	; 4
  f0:	85 b9       	out	0x05, r24	; 5
  f2:	08 95       	ret

000000f4 <__vector_13>:
}

ISR(TIMER1_OVF_vect)
{
  f4:	1f 92       	push	r1
  f6:	0f 92       	push	r0
  f8:	0f b6       	in	r0, 0x3f	; 63
  fa:	0f 92       	push	r0
  fc:	11 24       	eor	r1, r1
  fe:	8f 93       	push	r24
    flag = 1;
 100:	81 e0       	ldi	r24, 0x01	; 1
 102:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <flag>
}
 106:	8f 91       	pop	r24
 108:	0f 90       	pop	r0
 10a:	0f be       	out	0x3f, r0	; 63
 10c:	0f 90       	pop	r0
 10e:	1f 90       	pop	r1
 110:	18 95       	reti

00000112 <__vector_10>:

ISR(TIMER1_CAPT_vect)
{
 112:	1f 92       	push	r1
 114:	0f 92       	push	r0
 116:	0f b6       	in	r0, 0x3f	; 63
 118:	0f 92       	push	r0
 11a:	11 24       	eor	r1, r1
 11c:	2f 93       	push	r18
 11e:	3f 93       	push	r19
 120:	4f 93       	push	r20
 122:	5f 93       	push	r21
 124:	6f 93       	push	r22
 126:	7f 93       	push	r23
 128:	8f 93       	push	r24
 12a:	9f 93       	push	r25
 12c:	af 93       	push	r26
 12e:	bf 93       	push	r27
 130:	ef 93       	push	r30
 132:	ff 93       	push	r31
    static uint16_t start = 0;
    uint16_t stop = ICR1;
 134:	60 91 86 00 	lds	r22, 0x0086	; 0x800086 <__TEXT_REGION_LENGTH__+0x7f8086>
 138:	70 91 87 00 	lds	r23, 0x0087	; 0x800087 <__TEXT_REGION_LENGTH__+0x7f8087>

    if (flag == 1) // Rising edge detected
 13c:	80 91 52 01 	lds	r24, 0x0152	; 0x800152 <flag>
 140:	81 30       	cpi	r24, 0x01	; 1
 142:	59 f4       	brne	.+22     	; 0x15a <__vector_10+0x48>
    {
        start = ICR1;
 144:	80 91 86 00 	lds	r24, 0x0086	; 0x800086 <__TEXT_REGION_LENGTH__+0x7f8086>
 148:	90 91 87 00 	lds	r25, 0x0087	; 0x800087 <__TEXT_REGION_LENGTH__+0x7f8087>
 14c:	90 93 51 01 	sts	0x0151, r25	; 0x800151 <__data_end+0x1>
 150:	80 93 50 01 	sts	0x0150, r24	; 0x800150 <__data_end>
        flag = 0;
 154:	10 92 52 01 	sts	0x0152, r1	; 0x800152 <flag>
 158:	1c c0       	rjmp	.+56     	; 0x192 <__vector_10+0x80>
    }
    else // Falling edge detected
    {
        uint16_t elapsed = stop - start;
 15a:	80 91 50 01 	lds	r24, 0x0150	; 0x800150 <__data_end>
 15e:	90 91 51 01 	lds	r25, 0x0151	; 0x800151 <__data_end+0x1>
 162:	68 1b       	sub	r22, r24
 164:	79 0b       	sbc	r23, r25
        distance = (elapsed * 0.0343) / 2; // Convert to centimeters
 166:	80 e0       	ldi	r24, 0x00	; 0
 168:	90 e0       	ldi	r25, 0x00	; 0
 16a:	0e 94 af 01 	call	0x35e	; 0x35e <__floatunsisf>
 16e:	28 e2       	ldi	r18, 0x28	; 40
 170:	3e e7       	ldi	r19, 0x7E	; 126
 172:	4c e0       	ldi	r20, 0x0C	; 12
 174:	5d e3       	ldi	r21, 0x3D	; 61
 176:	0e 94 15 02 	call	0x42a	; 0x42a <__mulsf3>
 17a:	20 e0       	ldi	r18, 0x00	; 0
 17c:	30 e0       	ldi	r19, 0x00	; 0
 17e:	40 e0       	ldi	r20, 0x00	; 0
 180:	5f e3       	ldi	r21, 0x3F	; 63
 182:	0e 94 15 02 	call	0x42a	; 0x42a <__mulsf3>
 186:	0e 94 80 01 	call	0x300	; 0x300 <__fixunssfsi>
 18a:	70 93 54 01 	sts	0x0154, r23	; 0x800154 <distance+0x1>
 18e:	60 93 53 01 	sts	0x0153, r22	; 0x800153 <distance>
    }
}
 192:	ff 91       	pop	r31
 194:	ef 91       	pop	r30
 196:	bf 91       	pop	r27
 198:	af 91       	pop	r26
 19a:	9f 91       	pop	r25
 19c:	8f 91       	pop	r24
 19e:	7f 91       	pop	r23
 1a0:	6f 91       	pop	r22
 1a2:	5f 91       	pop	r21
 1a4:	4f 91       	pop	r20
 1a6:	3f 91       	pop	r19
 1a8:	2f 91       	pop	r18
 1aa:	0f 90       	pop	r0
 1ac:	0f be       	out	0x3f, r0	; 63
 1ae:	0f 90       	pop	r0
 1b0:	1f 90       	pop	r1
 1b2:	18 95       	reti

000001b4 <main>:
	uint32_t prev_distance_cm = 0;
	(void)time_us; // suppress unused variable warning
	char buffer[20];
	(void)buffer; // suppress unused variable warning
	
	init();
 1b4:	0e 94 58 00 	call	0xb0	; 0xb0 <init>
	initSPI_slave();
 1b8:	0e 94 53 00 	call	0xa6	; 0xa6 <initSPI_slave>
	//initHC_SR04();

	sei(); // Enable global interrupts
 1bc:	78 94       	sei
	init_uart();
 1be:	0e 94 6c 01 	call	0x2d8	; 0x2d8 <init_uart>
	printf("Slave scanning...");
 1c2:	8c e1       	ldi	r24, 0x1C	; 28
 1c4:	91 e0       	ldi	r25, 0x01	; 1
 1c6:	9f 93       	push	r25
 1c8:	8f 93       	push	r24
 1ca:	0e 94 b9 02 	call	0x572	; 0x572 <printf>
 1ce:	0f 90       	pop	r0
 1d0:	0f 90       	pop	r0

int main()
{
	uint16_t time_us;
	uint32_t distance_cm = 0;
	uint32_t prev_distance_cm = 0;
 1d2:	c1 2c       	mov	r12, r1
 1d4:	d1 2c       	mov	r13, r1
 1d6:	76 01       	movw	r14, r12
 1d8:	02 c0       	rjmp	.+4      	; 0x1de <main+0x2a>
        distance = (elapsed * 0.0343) / 2; // Convert to centimeters
    }
}

int main()
{
 1da:	75 01       	movw	r14, r10
 1dc:	64 01       	movw	r12, r8
	init_uart();
	printf("Slave scanning...");

	while (1)
	{
		PORTB |= (1 << TRIG_PIN);
 1de:	85 b1       	in	r24, 0x05	; 5
 1e0:	81 60       	ori	r24, 0x01	; 1
 1e2:	85 b9       	out	0x05, r24	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1e4:	23 e0       	ldi	r18, 0x03	; 3
 1e6:	2a 95       	dec	r18
 1e8:	f1 f7       	brne	.-4      	; 0x1e6 <main+0x32>
 1ea:	00 00       	nop
		_delay_us(10);
		PORTB &= ~(1 << TRIG_PIN);
 1ec:	85 b1       	in	r24, 0x05	; 5
 1ee:	8e 7f       	andi	r24, 0xFE	; 254
 1f0:	85 b9       	out	0x05, r24	; 5

		// wait for the echo pin to go high
		while (!(PINB & (1 << ECHO_PIN)));
 1f2:	19 9b       	sbis	0x03, 1	; 3
 1f4:	fe cf       	rjmp	.-4      	; 0x1f2 <main+0x3e>

		// start timer1
		TCNT1 = 0;
 1f6:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
 1fa:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>

		// wait for the echo pin to go low
		while (PINB & (1 << ECHO_PIN));
 1fe:	19 99       	sbic	0x03, 1	; 3
 200:	fe cf       	rjmp	.-4      	; 0x1fe <main+0x4a>

		// stop timer1 and calculate the time it took for the sound to travel
		// from the sensor to the object and back
		time_us = TCNT1 * 0.5;
 202:	60 91 84 00 	lds	r22, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
 206:	70 91 85 00 	lds	r23, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
 20a:	80 e0       	ldi	r24, 0x00	; 0
 20c:	90 e0       	ldi	r25, 0x00	; 0
 20e:	0e 94 af 01 	call	0x35e	; 0x35e <__floatunsisf>
 212:	20 e0       	ldi	r18, 0x00	; 0
 214:	30 e0       	ldi	r19, 0x00	; 0
 216:	40 e0       	ldi	r20, 0x00	; 0
 218:	5f e3       	ldi	r21, 0x3F	; 63
 21a:	0e 94 15 02 	call	0x42a	; 0x42a <__mulsf3>
 21e:	0e 94 80 01 	call	0x300	; 0x300 <__fixunssfsi>

		// calculate the distance in centimeters
		distance_cm = time_us / 58;
 222:	9b 01       	movw	r18, r22
 224:	af e9       	ldi	r26, 0x9F	; 159
 226:	b6 e4       	ldi	r27, 0x46	; 70
 228:	0e 94 aa 02 	call	0x554	; 0x554 <__umulhisi3>
 22c:	92 95       	swap	r25
 22e:	82 95       	swap	r24
 230:	8f 70       	andi	r24, 0x0F	; 15
 232:	89 27       	eor	r24, r25
 234:	9f 70       	andi	r25, 0x0F	; 15
 236:	89 27       	eor	r24, r25
 238:	4c 01       	movw	r8, r24
 23a:	a1 2c       	mov	r10, r1
 23c:	b1 2c       	mov	r11, r1
		//printf("Distance: %lu \n", distance_cm);

		// initialize prev_distance_cm to the first measured distance value
		if (prev_distance_cm == 0) {
 23e:	c1 14       	cp	r12, r1
 240:	d1 04       	cpc	r13, r1
 242:	e1 04       	cpc	r14, r1
 244:	f1 04       	cpc	r15, r1
 246:	11 f4       	brne	.+4      	; 0x24c <main+0x98>
			prev_distance_cm = distance_cm;
 248:	75 01       	movw	r14, r10
 24a:	64 01       	movw	r12, r8
		}
		
		if (abs(distance_cm - prev_distance_cm) > 170)
 24c:	8c 19       	sub	r24, r12
 24e:	9d 09       	sbc	r25, r13
 250:	9c 01       	movw	r18, r24
 252:	22 f4       	brpl	.+8      	; 0x25c <main+0xa8>
 254:	22 27       	eor	r18, r18
 256:	33 27       	eor	r19, r19
 258:	28 1b       	sub	r18, r24
 25a:	39 0b       	sbc	r19, r25
 25c:	2b 3a       	cpi	r18, 0xAB	; 171
 25e:	31 05       	cpc	r19, r1
 260:	0c f4       	brge	.+2      	; 0x264 <main+0xb0>
 262:	bb cf       	rjmp	.-138    	; 0x1da <main+0x26>
		{
			printf("MOVEMENT DETECTED");	
 264:	8e e2       	ldi	r24, 0x2E	; 46
 266:	91 e0       	ldi	r25, 0x01	; 1
 268:	9f 93       	push	r25
 26a:	8f 93       	push	r24
 26c:	0e 94 b9 02 	call	0x572	; 0x572 <printf>
			printf("Distance: %lu \n", distance_cm);
 270:	1f 92       	push	r1
 272:	1f 92       	push	r1
 274:	9f 92       	push	r9
 276:	8f 92       	push	r8
 278:	80 e4       	ldi	r24, 0x40	; 64
 27a:	91 e0       	ldi	r25, 0x01	; 1
 27c:	9f 93       	push	r25
 27e:	8f 93       	push	r24
 280:	0e 94 b9 02 	call	0x572	; 0x572 <printf>
			sendSPI(1); // Send signal to master
 284:	81 e0       	ldi	r24, 0x01	; 1
 286:	0e 94 6f 00 	call	0xde	; 0xde <sendSPI>
			distance = 0; // Reset distance
 28a:	10 92 54 01 	sts	0x0154, r1	; 0x800154 <distance+0x1>
 28e:	10 92 53 01 	sts	0x0153, r1	; 0x800153 <distance>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 292:	8f e9       	ldi	r24, 0x9F	; 159
 294:	96 e8       	ldi	r25, 0x86	; 134
 296:	21 e0       	ldi	r18, 0x01	; 1
 298:	81 50       	subi	r24, 0x01	; 1
 29a:	90 40       	sbci	r25, 0x00	; 0
 29c:	20 40       	sbci	r18, 0x00	; 0
 29e:	e1 f7       	brne	.-8      	; 0x298 <main+0xe4>
 2a0:	00 c0       	rjmp	.+0      	; 0x2a2 <main+0xee>
 2a2:	00 00       	nop
 2a4:	8d b7       	in	r24, 0x3d	; 61
 2a6:	9e b7       	in	r25, 0x3e	; 62
 2a8:	08 96       	adiw	r24, 0x08	; 8
 2aa:	0f b6       	in	r0, 0x3f	; 63
 2ac:	f8 94       	cli
 2ae:	9e bf       	out	0x3e, r25	; 62
 2b0:	0f be       	out	0x3f, r0	; 63
 2b2:	8d bf       	out	0x3d, r24	; 61
 2b4:	92 cf       	rjmp	.-220    	; 0x1da <main+0x26>

000002b6 <uart_putchar>:
FILE mystdin = FDEV_SETUP_STREAM(NULL, uart_getchar, _FDEV_SETUP_READ);
/******************************************************************************
******************************************************************************/
int uart_putchar(char c, FILE *stream)
{
	loop_until_bit_is_set(UCSR0A, UDRE0);
 2b6:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
 2ba:	95 ff       	sbrs	r25, 5
 2bc:	fc cf       	rjmp	.-8      	; 0x2b6 <uart_putchar>
	UDR0 = c;
 2be:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
	return 0;
}
 2c2:	80 e0       	ldi	r24, 0x00	; 0
 2c4:	90 e0       	ldi	r25, 0x00	; 0
 2c6:	08 95       	ret

000002c8 <uart_getchar>:
/******************************************************************************
******************************************************************************/
int uart_getchar(FILE *stream)
{
	/* Wait until data exists. */
	loop_until_bit_is_set(UCSR0A, RXC0);
 2c8:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
 2cc:	88 23       	and	r24, r24
 2ce:	e4 f7       	brge	.-8      	; 0x2c8 <uart_getchar>
	return UDR0;
 2d0:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
}
 2d4:	90 e0       	ldi	r25, 0x00	; 0
 2d6:	08 95       	ret

000002d8 <init_uart>:
/******************************************************************************
******************************************************************************/
void init_uart(void)
{
	UCSR0B = (1<<RXEN0) | (1<<TXEN0);
 2d8:	88 e1       	ldi	r24, 0x18	; 24
 2da:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
	UBRR0 = 103;  //With 16 MHz Crystal, 9600 baud = 103
 2de:	87 e6       	ldi	r24, 0x67	; 103
 2e0:	90 e0       	ldi	r25, 0x00	; 0
 2e2:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
 2e6:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
	stdout = &mystdout;
 2ea:	e5 e5       	ldi	r30, 0x55	; 85
 2ec:	f1 e0       	ldi	r31, 0x01	; 1
 2ee:	8e e0       	ldi	r24, 0x0E	; 14
 2f0:	91 e0       	ldi	r25, 0x01	; 1
 2f2:	93 83       	std	Z+3, r25	; 0x03
 2f4:	82 83       	std	Z+2, r24	; 0x02
	stdin = &mystdin;
 2f6:	80 e0       	ldi	r24, 0x00	; 0
 2f8:	91 e0       	ldi	r25, 0x01	; 1
 2fa:	91 83       	std	Z+1, r25	; 0x01
 2fc:	80 83       	st	Z, r24
 2fe:	08 95       	ret

00000300 <__fixunssfsi>:
 300:	0e 94 f4 01 	call	0x3e8	; 0x3e8 <__fp_splitA>
 304:	88 f0       	brcs	.+34     	; 0x328 <__fixunssfsi+0x28>
 306:	9f 57       	subi	r25, 0x7F	; 127
 308:	98 f0       	brcs	.+38     	; 0x330 <__fixunssfsi+0x30>
 30a:	b9 2f       	mov	r27, r25
 30c:	99 27       	eor	r25, r25
 30e:	b7 51       	subi	r27, 0x17	; 23
 310:	b0 f0       	brcs	.+44     	; 0x33e <__fixunssfsi+0x3e>
 312:	e1 f0       	breq	.+56     	; 0x34c <__fixunssfsi+0x4c>
 314:	66 0f       	add	r22, r22
 316:	77 1f       	adc	r23, r23
 318:	88 1f       	adc	r24, r24
 31a:	99 1f       	adc	r25, r25
 31c:	1a f0       	brmi	.+6      	; 0x324 <__fixunssfsi+0x24>
 31e:	ba 95       	dec	r27
 320:	c9 f7       	brne	.-14     	; 0x314 <__fixunssfsi+0x14>
 322:	14 c0       	rjmp	.+40     	; 0x34c <__fixunssfsi+0x4c>
 324:	b1 30       	cpi	r27, 0x01	; 1
 326:	91 f0       	breq	.+36     	; 0x34c <__fixunssfsi+0x4c>
 328:	0e 94 0e 02 	call	0x41c	; 0x41c <__fp_zero>
 32c:	b1 e0       	ldi	r27, 0x01	; 1
 32e:	08 95       	ret
 330:	0c 94 0e 02 	jmp	0x41c	; 0x41c <__fp_zero>
 334:	67 2f       	mov	r22, r23
 336:	78 2f       	mov	r23, r24
 338:	88 27       	eor	r24, r24
 33a:	b8 5f       	subi	r27, 0xF8	; 248
 33c:	39 f0       	breq	.+14     	; 0x34c <__fixunssfsi+0x4c>
 33e:	b9 3f       	cpi	r27, 0xF9	; 249
 340:	cc f3       	brlt	.-14     	; 0x334 <__fixunssfsi+0x34>
 342:	86 95       	lsr	r24
 344:	77 95       	ror	r23
 346:	67 95       	ror	r22
 348:	b3 95       	inc	r27
 34a:	d9 f7       	brne	.-10     	; 0x342 <__fixunssfsi+0x42>
 34c:	3e f4       	brtc	.+14     	; 0x35c <__fixunssfsi+0x5c>
 34e:	90 95       	com	r25
 350:	80 95       	com	r24
 352:	70 95       	com	r23
 354:	61 95       	neg	r22
 356:	7f 4f       	sbci	r23, 0xFF	; 255
 358:	8f 4f       	sbci	r24, 0xFF	; 255
 35a:	9f 4f       	sbci	r25, 0xFF	; 255
 35c:	08 95       	ret

0000035e <__floatunsisf>:
 35e:	e8 94       	clt
 360:	09 c0       	rjmp	.+18     	; 0x374 <__floatsisf+0x12>

00000362 <__floatsisf>:
 362:	97 fb       	bst	r25, 7
 364:	3e f4       	brtc	.+14     	; 0x374 <__floatsisf+0x12>
 366:	90 95       	com	r25
 368:	80 95       	com	r24
 36a:	70 95       	com	r23
 36c:	61 95       	neg	r22
 36e:	7f 4f       	sbci	r23, 0xFF	; 255
 370:	8f 4f       	sbci	r24, 0xFF	; 255
 372:	9f 4f       	sbci	r25, 0xFF	; 255
 374:	99 23       	and	r25, r25
 376:	a9 f0       	breq	.+42     	; 0x3a2 <__floatsisf+0x40>
 378:	f9 2f       	mov	r31, r25
 37a:	96 e9       	ldi	r25, 0x96	; 150
 37c:	bb 27       	eor	r27, r27
 37e:	93 95       	inc	r25
 380:	f6 95       	lsr	r31
 382:	87 95       	ror	r24
 384:	77 95       	ror	r23
 386:	67 95       	ror	r22
 388:	b7 95       	ror	r27
 38a:	f1 11       	cpse	r31, r1
 38c:	f8 cf       	rjmp	.-16     	; 0x37e <__floatsisf+0x1c>
 38e:	fa f4       	brpl	.+62     	; 0x3ce <__floatsisf+0x6c>
 390:	bb 0f       	add	r27, r27
 392:	11 f4       	brne	.+4      	; 0x398 <__floatsisf+0x36>
 394:	60 ff       	sbrs	r22, 0
 396:	1b c0       	rjmp	.+54     	; 0x3ce <__floatsisf+0x6c>
 398:	6f 5f       	subi	r22, 0xFF	; 255
 39a:	7f 4f       	sbci	r23, 0xFF	; 255
 39c:	8f 4f       	sbci	r24, 0xFF	; 255
 39e:	9f 4f       	sbci	r25, 0xFF	; 255
 3a0:	16 c0       	rjmp	.+44     	; 0x3ce <__floatsisf+0x6c>
 3a2:	88 23       	and	r24, r24
 3a4:	11 f0       	breq	.+4      	; 0x3aa <__floatsisf+0x48>
 3a6:	96 e9       	ldi	r25, 0x96	; 150
 3a8:	11 c0       	rjmp	.+34     	; 0x3cc <__floatsisf+0x6a>
 3aa:	77 23       	and	r23, r23
 3ac:	21 f0       	breq	.+8      	; 0x3b6 <__floatsisf+0x54>
 3ae:	9e e8       	ldi	r25, 0x8E	; 142
 3b0:	87 2f       	mov	r24, r23
 3b2:	76 2f       	mov	r23, r22
 3b4:	05 c0       	rjmp	.+10     	; 0x3c0 <__floatsisf+0x5e>
 3b6:	66 23       	and	r22, r22
 3b8:	71 f0       	breq	.+28     	; 0x3d6 <__floatsisf+0x74>
 3ba:	96 e8       	ldi	r25, 0x86	; 134
 3bc:	86 2f       	mov	r24, r22
 3be:	70 e0       	ldi	r23, 0x00	; 0
 3c0:	60 e0       	ldi	r22, 0x00	; 0
 3c2:	2a f0       	brmi	.+10     	; 0x3ce <__floatsisf+0x6c>
 3c4:	9a 95       	dec	r25
 3c6:	66 0f       	add	r22, r22
 3c8:	77 1f       	adc	r23, r23
 3ca:	88 1f       	adc	r24, r24
 3cc:	da f7       	brpl	.-10     	; 0x3c4 <__floatsisf+0x62>
 3ce:	88 0f       	add	r24, r24
 3d0:	96 95       	lsr	r25
 3d2:	87 95       	ror	r24
 3d4:	97 f9       	bld	r25, 7
 3d6:	08 95       	ret

000003d8 <__fp_split3>:
 3d8:	57 fd       	sbrc	r21, 7
 3da:	90 58       	subi	r25, 0x80	; 128
 3dc:	44 0f       	add	r20, r20
 3de:	55 1f       	adc	r21, r21
 3e0:	59 f0       	breq	.+22     	; 0x3f8 <__fp_splitA+0x10>
 3e2:	5f 3f       	cpi	r21, 0xFF	; 255
 3e4:	71 f0       	breq	.+28     	; 0x402 <__EEPROM_REGION_LENGTH__+0x2>
 3e6:	47 95       	ror	r20

000003e8 <__fp_splitA>:
 3e8:	88 0f       	add	r24, r24
 3ea:	97 fb       	bst	r25, 7
 3ec:	99 1f       	adc	r25, r25
 3ee:	61 f0       	breq	.+24     	; 0x408 <__EEPROM_REGION_LENGTH__+0x8>
 3f0:	9f 3f       	cpi	r25, 0xFF	; 255
 3f2:	79 f0       	breq	.+30     	; 0x412 <__EEPROM_REGION_LENGTH__+0x12>
 3f4:	87 95       	ror	r24
 3f6:	08 95       	ret
 3f8:	12 16       	cp	r1, r18
 3fa:	13 06       	cpc	r1, r19
 3fc:	14 06       	cpc	r1, r20
 3fe:	55 1f       	adc	r21, r21
 400:	f2 cf       	rjmp	.-28     	; 0x3e6 <__fp_split3+0xe>
 402:	46 95       	lsr	r20
 404:	f1 df       	rcall	.-30     	; 0x3e8 <__fp_splitA>
 406:	08 c0       	rjmp	.+16     	; 0x418 <__EEPROM_REGION_LENGTH__+0x18>
 408:	16 16       	cp	r1, r22
 40a:	17 06       	cpc	r1, r23
 40c:	18 06       	cpc	r1, r24
 40e:	99 1f       	adc	r25, r25
 410:	f1 cf       	rjmp	.-30     	; 0x3f4 <__fp_splitA+0xc>
 412:	86 95       	lsr	r24
 414:	71 05       	cpc	r23, r1
 416:	61 05       	cpc	r22, r1
 418:	08 94       	sec
 41a:	08 95       	ret

0000041c <__fp_zero>:
 41c:	e8 94       	clt

0000041e <__fp_szero>:
 41e:	bb 27       	eor	r27, r27
 420:	66 27       	eor	r22, r22
 422:	77 27       	eor	r23, r23
 424:	cb 01       	movw	r24, r22
 426:	97 f9       	bld	r25, 7
 428:	08 95       	ret

0000042a <__mulsf3>:
 42a:	0e 94 28 02 	call	0x450	; 0x450 <__mulsf3x>
 42e:	0c 94 99 02 	jmp	0x532	; 0x532 <__fp_round>
 432:	0e 94 8b 02 	call	0x516	; 0x516 <__fp_pscA>
 436:	38 f0       	brcs	.+14     	; 0x446 <__mulsf3+0x1c>
 438:	0e 94 92 02 	call	0x524	; 0x524 <__fp_pscB>
 43c:	20 f0       	brcs	.+8      	; 0x446 <__mulsf3+0x1c>
 43e:	95 23       	and	r25, r21
 440:	11 f0       	breq	.+4      	; 0x446 <__mulsf3+0x1c>
 442:	0c 94 82 02 	jmp	0x504	; 0x504 <__fp_inf>
 446:	0c 94 88 02 	jmp	0x510	; 0x510 <__fp_nan>
 44a:	11 24       	eor	r1, r1
 44c:	0c 94 0f 02 	jmp	0x41e	; 0x41e <__fp_szero>

00000450 <__mulsf3x>:
 450:	0e 94 ec 01 	call	0x3d8	; 0x3d8 <__fp_split3>
 454:	70 f3       	brcs	.-36     	; 0x432 <__mulsf3+0x8>

00000456 <__mulsf3_pse>:
 456:	95 9f       	mul	r25, r21
 458:	c1 f3       	breq	.-16     	; 0x44a <__mulsf3+0x20>
 45a:	95 0f       	add	r25, r21
 45c:	50 e0       	ldi	r21, 0x00	; 0
 45e:	55 1f       	adc	r21, r21
 460:	62 9f       	mul	r22, r18
 462:	f0 01       	movw	r30, r0
 464:	72 9f       	mul	r23, r18
 466:	bb 27       	eor	r27, r27
 468:	f0 0d       	add	r31, r0
 46a:	b1 1d       	adc	r27, r1
 46c:	63 9f       	mul	r22, r19
 46e:	aa 27       	eor	r26, r26
 470:	f0 0d       	add	r31, r0
 472:	b1 1d       	adc	r27, r1
 474:	aa 1f       	adc	r26, r26
 476:	64 9f       	mul	r22, r20
 478:	66 27       	eor	r22, r22
 47a:	b0 0d       	add	r27, r0
 47c:	a1 1d       	adc	r26, r1
 47e:	66 1f       	adc	r22, r22
 480:	82 9f       	mul	r24, r18
 482:	22 27       	eor	r18, r18
 484:	b0 0d       	add	r27, r0
 486:	a1 1d       	adc	r26, r1
 488:	62 1f       	adc	r22, r18
 48a:	73 9f       	mul	r23, r19
 48c:	b0 0d       	add	r27, r0
 48e:	a1 1d       	adc	r26, r1
 490:	62 1f       	adc	r22, r18
 492:	83 9f       	mul	r24, r19
 494:	a0 0d       	add	r26, r0
 496:	61 1d       	adc	r22, r1
 498:	22 1f       	adc	r18, r18
 49a:	74 9f       	mul	r23, r20
 49c:	33 27       	eor	r19, r19
 49e:	a0 0d       	add	r26, r0
 4a0:	61 1d       	adc	r22, r1
 4a2:	23 1f       	adc	r18, r19
 4a4:	84 9f       	mul	r24, r20
 4a6:	60 0d       	add	r22, r0
 4a8:	21 1d       	adc	r18, r1
 4aa:	82 2f       	mov	r24, r18
 4ac:	76 2f       	mov	r23, r22
 4ae:	6a 2f       	mov	r22, r26
 4b0:	11 24       	eor	r1, r1
 4b2:	9f 57       	subi	r25, 0x7F	; 127
 4b4:	50 40       	sbci	r21, 0x00	; 0
 4b6:	9a f0       	brmi	.+38     	; 0x4de <__mulsf3_pse+0x88>
 4b8:	f1 f0       	breq	.+60     	; 0x4f6 <__mulsf3_pse+0xa0>
 4ba:	88 23       	and	r24, r24
 4bc:	4a f0       	brmi	.+18     	; 0x4d0 <__mulsf3_pse+0x7a>
 4be:	ee 0f       	add	r30, r30
 4c0:	ff 1f       	adc	r31, r31
 4c2:	bb 1f       	adc	r27, r27
 4c4:	66 1f       	adc	r22, r22
 4c6:	77 1f       	adc	r23, r23
 4c8:	88 1f       	adc	r24, r24
 4ca:	91 50       	subi	r25, 0x01	; 1
 4cc:	50 40       	sbci	r21, 0x00	; 0
 4ce:	a9 f7       	brne	.-22     	; 0x4ba <__mulsf3_pse+0x64>
 4d0:	9e 3f       	cpi	r25, 0xFE	; 254
 4d2:	51 05       	cpc	r21, r1
 4d4:	80 f0       	brcs	.+32     	; 0x4f6 <__mulsf3_pse+0xa0>
 4d6:	0c 94 82 02 	jmp	0x504	; 0x504 <__fp_inf>
 4da:	0c 94 0f 02 	jmp	0x41e	; 0x41e <__fp_szero>
 4de:	5f 3f       	cpi	r21, 0xFF	; 255
 4e0:	e4 f3       	brlt	.-8      	; 0x4da <__mulsf3_pse+0x84>
 4e2:	98 3e       	cpi	r25, 0xE8	; 232
 4e4:	d4 f3       	brlt	.-12     	; 0x4da <__mulsf3_pse+0x84>
 4e6:	86 95       	lsr	r24
 4e8:	77 95       	ror	r23
 4ea:	67 95       	ror	r22
 4ec:	b7 95       	ror	r27
 4ee:	f7 95       	ror	r31
 4f0:	e7 95       	ror	r30
 4f2:	9f 5f       	subi	r25, 0xFF	; 255
 4f4:	c1 f7       	brne	.-16     	; 0x4e6 <__mulsf3_pse+0x90>
 4f6:	fe 2b       	or	r31, r30
 4f8:	88 0f       	add	r24, r24
 4fa:	91 1d       	adc	r25, r1
 4fc:	96 95       	lsr	r25
 4fe:	87 95       	ror	r24
 500:	97 f9       	bld	r25, 7
 502:	08 95       	ret

00000504 <__fp_inf>:
 504:	97 f9       	bld	r25, 7
 506:	9f 67       	ori	r25, 0x7F	; 127
 508:	80 e8       	ldi	r24, 0x80	; 128
 50a:	70 e0       	ldi	r23, 0x00	; 0
 50c:	60 e0       	ldi	r22, 0x00	; 0
 50e:	08 95       	ret

00000510 <__fp_nan>:
 510:	9f ef       	ldi	r25, 0xFF	; 255
 512:	80 ec       	ldi	r24, 0xC0	; 192
 514:	08 95       	ret

00000516 <__fp_pscA>:
 516:	00 24       	eor	r0, r0
 518:	0a 94       	dec	r0
 51a:	16 16       	cp	r1, r22
 51c:	17 06       	cpc	r1, r23
 51e:	18 06       	cpc	r1, r24
 520:	09 06       	cpc	r0, r25
 522:	08 95       	ret

00000524 <__fp_pscB>:
 524:	00 24       	eor	r0, r0
 526:	0a 94       	dec	r0
 528:	12 16       	cp	r1, r18
 52a:	13 06       	cpc	r1, r19
 52c:	14 06       	cpc	r1, r20
 52e:	05 06       	cpc	r0, r21
 530:	08 95       	ret

00000532 <__fp_round>:
 532:	09 2e       	mov	r0, r25
 534:	03 94       	inc	r0
 536:	00 0c       	add	r0, r0
 538:	11 f4       	brne	.+4      	; 0x53e <__fp_round+0xc>
 53a:	88 23       	and	r24, r24
 53c:	52 f0       	brmi	.+20     	; 0x552 <__fp_round+0x20>
 53e:	bb 0f       	add	r27, r27
 540:	40 f4       	brcc	.+16     	; 0x552 <__fp_round+0x20>
 542:	bf 2b       	or	r27, r31
 544:	11 f4       	brne	.+4      	; 0x54a <__fp_round+0x18>
 546:	60 ff       	sbrs	r22, 0
 548:	04 c0       	rjmp	.+8      	; 0x552 <__fp_round+0x20>
 54a:	6f 5f       	subi	r22, 0xFF	; 255
 54c:	7f 4f       	sbci	r23, 0xFF	; 255
 54e:	8f 4f       	sbci	r24, 0xFF	; 255
 550:	9f 4f       	sbci	r25, 0xFF	; 255
 552:	08 95       	ret

00000554 <__umulhisi3>:
 554:	a2 9f       	mul	r26, r18
 556:	b0 01       	movw	r22, r0
 558:	b3 9f       	mul	r27, r19
 55a:	c0 01       	movw	r24, r0
 55c:	a3 9f       	mul	r26, r19
 55e:	70 0d       	add	r23, r0
 560:	81 1d       	adc	r24, r1
 562:	11 24       	eor	r1, r1
 564:	91 1d       	adc	r25, r1
 566:	b2 9f       	mul	r27, r18
 568:	70 0d       	add	r23, r0
 56a:	81 1d       	adc	r24, r1
 56c:	11 24       	eor	r1, r1
 56e:	91 1d       	adc	r25, r1
 570:	08 95       	ret

00000572 <printf>:
 572:	a0 e0       	ldi	r26, 0x00	; 0
 574:	b0 e0       	ldi	r27, 0x00	; 0
 576:	ef eb       	ldi	r30, 0xBF	; 191
 578:	f2 e0       	ldi	r31, 0x02	; 2
 57a:	0c 94 70 05 	jmp	0xae0	; 0xae0 <__prologue_saves__+0x20>
 57e:	ae 01       	movw	r20, r28
 580:	4b 5f       	subi	r20, 0xFB	; 251
 582:	5f 4f       	sbci	r21, 0xFF	; 255
 584:	fa 01       	movw	r30, r20
 586:	61 91       	ld	r22, Z+
 588:	71 91       	ld	r23, Z+
 58a:	af 01       	movw	r20, r30
 58c:	80 91 57 01 	lds	r24, 0x0157	; 0x800157 <__iob+0x2>
 590:	90 91 58 01 	lds	r25, 0x0158	; 0x800158 <__iob+0x3>
 594:	0e 94 cf 02 	call	0x59e	; 0x59e <vfprintf>
 598:	e2 e0       	ldi	r30, 0x02	; 2
 59a:	0c 94 8c 05 	jmp	0xb18	; 0xb18 <__epilogue_restores__+0x20>

0000059e <vfprintf>:
 59e:	ab e0       	ldi	r26, 0x0B	; 11
 5a0:	b0 e0       	ldi	r27, 0x00	; 0
 5a2:	e5 ed       	ldi	r30, 0xD5	; 213
 5a4:	f2 e0       	ldi	r31, 0x02	; 2
 5a6:	0c 94 60 05 	jmp	0xac0	; 0xac0 <__prologue_saves__>
 5aa:	6c 01       	movw	r12, r24
 5ac:	7b 01       	movw	r14, r22
 5ae:	8a 01       	movw	r16, r20
 5b0:	fc 01       	movw	r30, r24
 5b2:	17 82       	std	Z+7, r1	; 0x07
 5b4:	16 82       	std	Z+6, r1	; 0x06
 5b6:	83 81       	ldd	r24, Z+3	; 0x03
 5b8:	81 ff       	sbrs	r24, 1
 5ba:	cc c1       	rjmp	.+920    	; 0x954 <__stack+0x55>
 5bc:	ce 01       	movw	r24, r28
 5be:	01 96       	adiw	r24, 0x01	; 1
 5c0:	3c 01       	movw	r6, r24
 5c2:	f6 01       	movw	r30, r12
 5c4:	93 81       	ldd	r25, Z+3	; 0x03
 5c6:	f7 01       	movw	r30, r14
 5c8:	93 fd       	sbrc	r25, 3
 5ca:	85 91       	lpm	r24, Z+
 5cc:	93 ff       	sbrs	r25, 3
 5ce:	81 91       	ld	r24, Z+
 5d0:	7f 01       	movw	r14, r30
 5d2:	88 23       	and	r24, r24
 5d4:	09 f4       	brne	.+2      	; 0x5d8 <vfprintf+0x3a>
 5d6:	ba c1       	rjmp	.+884    	; 0x94c <__stack+0x4d>
 5d8:	85 32       	cpi	r24, 0x25	; 37
 5da:	39 f4       	brne	.+14     	; 0x5ea <vfprintf+0x4c>
 5dc:	93 fd       	sbrc	r25, 3
 5de:	85 91       	lpm	r24, Z+
 5e0:	93 ff       	sbrs	r25, 3
 5e2:	81 91       	ld	r24, Z+
 5e4:	7f 01       	movw	r14, r30
 5e6:	85 32       	cpi	r24, 0x25	; 37
 5e8:	29 f4       	brne	.+10     	; 0x5f4 <vfprintf+0x56>
 5ea:	b6 01       	movw	r22, r12
 5ec:	90 e0       	ldi	r25, 0x00	; 0
 5ee:	0e 94 c6 04 	call	0x98c	; 0x98c <fputc>
 5f2:	e7 cf       	rjmp	.-50     	; 0x5c2 <vfprintf+0x24>
 5f4:	91 2c       	mov	r9, r1
 5f6:	21 2c       	mov	r2, r1
 5f8:	31 2c       	mov	r3, r1
 5fa:	ff e1       	ldi	r31, 0x1F	; 31
 5fc:	f3 15       	cp	r31, r3
 5fe:	d8 f0       	brcs	.+54     	; 0x636 <vfprintf+0x98>
 600:	8b 32       	cpi	r24, 0x2B	; 43
 602:	79 f0       	breq	.+30     	; 0x622 <vfprintf+0x84>
 604:	38 f4       	brcc	.+14     	; 0x614 <vfprintf+0x76>
 606:	80 32       	cpi	r24, 0x20	; 32
 608:	79 f0       	breq	.+30     	; 0x628 <vfprintf+0x8a>
 60a:	83 32       	cpi	r24, 0x23	; 35
 60c:	a1 f4       	brne	.+40     	; 0x636 <vfprintf+0x98>
 60e:	23 2d       	mov	r18, r3
 610:	20 61       	ori	r18, 0x10	; 16
 612:	1d c0       	rjmp	.+58     	; 0x64e <vfprintf+0xb0>
 614:	8d 32       	cpi	r24, 0x2D	; 45
 616:	61 f0       	breq	.+24     	; 0x630 <vfprintf+0x92>
 618:	80 33       	cpi	r24, 0x30	; 48
 61a:	69 f4       	brne	.+26     	; 0x636 <vfprintf+0x98>
 61c:	23 2d       	mov	r18, r3
 61e:	21 60       	ori	r18, 0x01	; 1
 620:	16 c0       	rjmp	.+44     	; 0x64e <vfprintf+0xb0>
 622:	83 2d       	mov	r24, r3
 624:	82 60       	ori	r24, 0x02	; 2
 626:	38 2e       	mov	r3, r24
 628:	e3 2d       	mov	r30, r3
 62a:	e4 60       	ori	r30, 0x04	; 4
 62c:	3e 2e       	mov	r3, r30
 62e:	2a c0       	rjmp	.+84     	; 0x684 <vfprintf+0xe6>
 630:	f3 2d       	mov	r31, r3
 632:	f8 60       	ori	r31, 0x08	; 8
 634:	1d c0       	rjmp	.+58     	; 0x670 <vfprintf+0xd2>
 636:	37 fc       	sbrc	r3, 7
 638:	2d c0       	rjmp	.+90     	; 0x694 <vfprintf+0xf6>
 63a:	20 ed       	ldi	r18, 0xD0	; 208
 63c:	28 0f       	add	r18, r24
 63e:	2a 30       	cpi	r18, 0x0A	; 10
 640:	40 f0       	brcs	.+16     	; 0x652 <vfprintf+0xb4>
 642:	8e 32       	cpi	r24, 0x2E	; 46
 644:	b9 f4       	brne	.+46     	; 0x674 <vfprintf+0xd6>
 646:	36 fc       	sbrc	r3, 6
 648:	81 c1       	rjmp	.+770    	; 0x94c <__stack+0x4d>
 64a:	23 2d       	mov	r18, r3
 64c:	20 64       	ori	r18, 0x40	; 64
 64e:	32 2e       	mov	r3, r18
 650:	19 c0       	rjmp	.+50     	; 0x684 <vfprintf+0xe6>
 652:	36 fe       	sbrs	r3, 6
 654:	06 c0       	rjmp	.+12     	; 0x662 <vfprintf+0xc4>
 656:	8a e0       	ldi	r24, 0x0A	; 10
 658:	98 9e       	mul	r9, r24
 65a:	20 0d       	add	r18, r0
 65c:	11 24       	eor	r1, r1
 65e:	92 2e       	mov	r9, r18
 660:	11 c0       	rjmp	.+34     	; 0x684 <vfprintf+0xe6>
 662:	ea e0       	ldi	r30, 0x0A	; 10
 664:	2e 9e       	mul	r2, r30
 666:	20 0d       	add	r18, r0
 668:	11 24       	eor	r1, r1
 66a:	22 2e       	mov	r2, r18
 66c:	f3 2d       	mov	r31, r3
 66e:	f0 62       	ori	r31, 0x20	; 32
 670:	3f 2e       	mov	r3, r31
 672:	08 c0       	rjmp	.+16     	; 0x684 <vfprintf+0xe6>
 674:	8c 36       	cpi	r24, 0x6C	; 108
 676:	21 f4       	brne	.+8      	; 0x680 <vfprintf+0xe2>
 678:	83 2d       	mov	r24, r3
 67a:	80 68       	ori	r24, 0x80	; 128
 67c:	38 2e       	mov	r3, r24
 67e:	02 c0       	rjmp	.+4      	; 0x684 <vfprintf+0xe6>
 680:	88 36       	cpi	r24, 0x68	; 104
 682:	41 f4       	brne	.+16     	; 0x694 <vfprintf+0xf6>
 684:	f7 01       	movw	r30, r14
 686:	93 fd       	sbrc	r25, 3
 688:	85 91       	lpm	r24, Z+
 68a:	93 ff       	sbrs	r25, 3
 68c:	81 91       	ld	r24, Z+
 68e:	7f 01       	movw	r14, r30
 690:	81 11       	cpse	r24, r1
 692:	b3 cf       	rjmp	.-154    	; 0x5fa <vfprintf+0x5c>
 694:	98 2f       	mov	r25, r24
 696:	9f 7d       	andi	r25, 0xDF	; 223
 698:	95 54       	subi	r25, 0x45	; 69
 69a:	93 30       	cpi	r25, 0x03	; 3
 69c:	28 f4       	brcc	.+10     	; 0x6a8 <vfprintf+0x10a>
 69e:	0c 5f       	subi	r16, 0xFC	; 252
 6a0:	1f 4f       	sbci	r17, 0xFF	; 255
 6a2:	9f e3       	ldi	r25, 0x3F	; 63
 6a4:	99 83       	std	Y+1, r25	; 0x01
 6a6:	0d c0       	rjmp	.+26     	; 0x6c2 <vfprintf+0x124>
 6a8:	83 36       	cpi	r24, 0x63	; 99
 6aa:	31 f0       	breq	.+12     	; 0x6b8 <vfprintf+0x11a>
 6ac:	83 37       	cpi	r24, 0x73	; 115
 6ae:	71 f0       	breq	.+28     	; 0x6cc <vfprintf+0x12e>
 6b0:	83 35       	cpi	r24, 0x53	; 83
 6b2:	09 f0       	breq	.+2      	; 0x6b6 <vfprintf+0x118>
 6b4:	59 c0       	rjmp	.+178    	; 0x768 <vfprintf+0x1ca>
 6b6:	21 c0       	rjmp	.+66     	; 0x6fa <vfprintf+0x15c>
 6b8:	f8 01       	movw	r30, r16
 6ba:	80 81       	ld	r24, Z
 6bc:	89 83       	std	Y+1, r24	; 0x01
 6be:	0e 5f       	subi	r16, 0xFE	; 254
 6c0:	1f 4f       	sbci	r17, 0xFF	; 255
 6c2:	88 24       	eor	r8, r8
 6c4:	83 94       	inc	r8
 6c6:	91 2c       	mov	r9, r1
 6c8:	53 01       	movw	r10, r6
 6ca:	13 c0       	rjmp	.+38     	; 0x6f2 <vfprintf+0x154>
 6cc:	28 01       	movw	r4, r16
 6ce:	f2 e0       	ldi	r31, 0x02	; 2
 6d0:	4f 0e       	add	r4, r31
 6d2:	51 1c       	adc	r5, r1
 6d4:	f8 01       	movw	r30, r16
 6d6:	a0 80       	ld	r10, Z
 6d8:	b1 80       	ldd	r11, Z+1	; 0x01
 6da:	36 fe       	sbrs	r3, 6
 6dc:	03 c0       	rjmp	.+6      	; 0x6e4 <vfprintf+0x146>
 6de:	69 2d       	mov	r22, r9
 6e0:	70 e0       	ldi	r23, 0x00	; 0
 6e2:	02 c0       	rjmp	.+4      	; 0x6e8 <vfprintf+0x14a>
 6e4:	6f ef       	ldi	r22, 0xFF	; 255
 6e6:	7f ef       	ldi	r23, 0xFF	; 255
 6e8:	c5 01       	movw	r24, r10
 6ea:	0e 94 bb 04 	call	0x976	; 0x976 <strnlen>
 6ee:	4c 01       	movw	r8, r24
 6f0:	82 01       	movw	r16, r4
 6f2:	f3 2d       	mov	r31, r3
 6f4:	ff 77       	andi	r31, 0x7F	; 127
 6f6:	3f 2e       	mov	r3, r31
 6f8:	16 c0       	rjmp	.+44     	; 0x726 <vfprintf+0x188>
 6fa:	28 01       	movw	r4, r16
 6fc:	22 e0       	ldi	r18, 0x02	; 2
 6fe:	42 0e       	add	r4, r18
 700:	51 1c       	adc	r5, r1
 702:	f8 01       	movw	r30, r16
 704:	a0 80       	ld	r10, Z
 706:	b1 80       	ldd	r11, Z+1	; 0x01
 708:	36 fe       	sbrs	r3, 6
 70a:	03 c0       	rjmp	.+6      	; 0x712 <vfprintf+0x174>
 70c:	69 2d       	mov	r22, r9
 70e:	70 e0       	ldi	r23, 0x00	; 0
 710:	02 c0       	rjmp	.+4      	; 0x716 <vfprintf+0x178>
 712:	6f ef       	ldi	r22, 0xFF	; 255
 714:	7f ef       	ldi	r23, 0xFF	; 255
 716:	c5 01       	movw	r24, r10
 718:	0e 94 b0 04 	call	0x960	; 0x960 <strnlen_P>
 71c:	4c 01       	movw	r8, r24
 71e:	f3 2d       	mov	r31, r3
 720:	f0 68       	ori	r31, 0x80	; 128
 722:	3f 2e       	mov	r3, r31
 724:	82 01       	movw	r16, r4
 726:	33 fc       	sbrc	r3, 3
 728:	1b c0       	rjmp	.+54     	; 0x760 <vfprintf+0x1c2>
 72a:	82 2d       	mov	r24, r2
 72c:	90 e0       	ldi	r25, 0x00	; 0
 72e:	88 16       	cp	r8, r24
 730:	99 06       	cpc	r9, r25
 732:	b0 f4       	brcc	.+44     	; 0x760 <vfprintf+0x1c2>
 734:	b6 01       	movw	r22, r12
 736:	80 e2       	ldi	r24, 0x20	; 32
 738:	90 e0       	ldi	r25, 0x00	; 0
 73a:	0e 94 c6 04 	call	0x98c	; 0x98c <fputc>
 73e:	2a 94       	dec	r2
 740:	f4 cf       	rjmp	.-24     	; 0x72a <vfprintf+0x18c>
 742:	f5 01       	movw	r30, r10
 744:	37 fc       	sbrc	r3, 7
 746:	85 91       	lpm	r24, Z+
 748:	37 fe       	sbrs	r3, 7
 74a:	81 91       	ld	r24, Z+
 74c:	5f 01       	movw	r10, r30
 74e:	b6 01       	movw	r22, r12
 750:	90 e0       	ldi	r25, 0x00	; 0
 752:	0e 94 c6 04 	call	0x98c	; 0x98c <fputc>
 756:	21 10       	cpse	r2, r1
 758:	2a 94       	dec	r2
 75a:	21 e0       	ldi	r18, 0x01	; 1
 75c:	82 1a       	sub	r8, r18
 75e:	91 08       	sbc	r9, r1
 760:	81 14       	cp	r8, r1
 762:	91 04       	cpc	r9, r1
 764:	71 f7       	brne	.-36     	; 0x742 <vfprintf+0x1a4>
 766:	e8 c0       	rjmp	.+464    	; 0x938 <__stack+0x39>
 768:	84 36       	cpi	r24, 0x64	; 100
 76a:	11 f0       	breq	.+4      	; 0x770 <vfprintf+0x1d2>
 76c:	89 36       	cpi	r24, 0x69	; 105
 76e:	41 f5       	brne	.+80     	; 0x7c0 <vfprintf+0x222>
 770:	f8 01       	movw	r30, r16
 772:	37 fe       	sbrs	r3, 7
 774:	07 c0       	rjmp	.+14     	; 0x784 <vfprintf+0x1e6>
 776:	60 81       	ld	r22, Z
 778:	71 81       	ldd	r23, Z+1	; 0x01
 77a:	82 81       	ldd	r24, Z+2	; 0x02
 77c:	93 81       	ldd	r25, Z+3	; 0x03
 77e:	0c 5f       	subi	r16, 0xFC	; 252
 780:	1f 4f       	sbci	r17, 0xFF	; 255
 782:	08 c0       	rjmp	.+16     	; 0x794 <vfprintf+0x1f6>
 784:	60 81       	ld	r22, Z
 786:	71 81       	ldd	r23, Z+1	; 0x01
 788:	07 2e       	mov	r0, r23
 78a:	00 0c       	add	r0, r0
 78c:	88 0b       	sbc	r24, r24
 78e:	99 0b       	sbc	r25, r25
 790:	0e 5f       	subi	r16, 0xFE	; 254
 792:	1f 4f       	sbci	r17, 0xFF	; 255
 794:	f3 2d       	mov	r31, r3
 796:	ff 76       	andi	r31, 0x6F	; 111
 798:	3f 2e       	mov	r3, r31
 79a:	97 ff       	sbrs	r25, 7
 79c:	09 c0       	rjmp	.+18     	; 0x7b0 <vfprintf+0x212>
 79e:	90 95       	com	r25
 7a0:	80 95       	com	r24
 7a2:	70 95       	com	r23
 7a4:	61 95       	neg	r22
 7a6:	7f 4f       	sbci	r23, 0xFF	; 255
 7a8:	8f 4f       	sbci	r24, 0xFF	; 255
 7aa:	9f 4f       	sbci	r25, 0xFF	; 255
 7ac:	f0 68       	ori	r31, 0x80	; 128
 7ae:	3f 2e       	mov	r3, r31
 7b0:	2a e0       	ldi	r18, 0x0A	; 10
 7b2:	30 e0       	ldi	r19, 0x00	; 0
 7b4:	a3 01       	movw	r20, r6
 7b6:	0e 94 02 05 	call	0xa04	; 0xa04 <__ultoa_invert>
 7ba:	88 2e       	mov	r8, r24
 7bc:	86 18       	sub	r8, r6
 7be:	45 c0       	rjmp	.+138    	; 0x84a <__DATA_REGION_LENGTH__+0x4a>
 7c0:	85 37       	cpi	r24, 0x75	; 117
 7c2:	31 f4       	brne	.+12     	; 0x7d0 <vfprintf+0x232>
 7c4:	23 2d       	mov	r18, r3
 7c6:	2f 7e       	andi	r18, 0xEF	; 239
 7c8:	b2 2e       	mov	r11, r18
 7ca:	2a e0       	ldi	r18, 0x0A	; 10
 7cc:	30 e0       	ldi	r19, 0x00	; 0
 7ce:	25 c0       	rjmp	.+74     	; 0x81a <__DATA_REGION_LENGTH__+0x1a>
 7d0:	93 2d       	mov	r25, r3
 7d2:	99 7f       	andi	r25, 0xF9	; 249
 7d4:	b9 2e       	mov	r11, r25
 7d6:	8f 36       	cpi	r24, 0x6F	; 111
 7d8:	c1 f0       	breq	.+48     	; 0x80a <__DATA_REGION_LENGTH__+0xa>
 7da:	18 f4       	brcc	.+6      	; 0x7e2 <vfprintf+0x244>
 7dc:	88 35       	cpi	r24, 0x58	; 88
 7de:	79 f0       	breq	.+30     	; 0x7fe <vfprintf+0x260>
 7e0:	b5 c0       	rjmp	.+362    	; 0x94c <__stack+0x4d>
 7e2:	80 37       	cpi	r24, 0x70	; 112
 7e4:	19 f0       	breq	.+6      	; 0x7ec <vfprintf+0x24e>
 7e6:	88 37       	cpi	r24, 0x78	; 120
 7e8:	21 f0       	breq	.+8      	; 0x7f2 <vfprintf+0x254>
 7ea:	b0 c0       	rjmp	.+352    	; 0x94c <__stack+0x4d>
 7ec:	e9 2f       	mov	r30, r25
 7ee:	e0 61       	ori	r30, 0x10	; 16
 7f0:	be 2e       	mov	r11, r30
 7f2:	b4 fe       	sbrs	r11, 4
 7f4:	0d c0       	rjmp	.+26     	; 0x810 <__DATA_REGION_LENGTH__+0x10>
 7f6:	fb 2d       	mov	r31, r11
 7f8:	f4 60       	ori	r31, 0x04	; 4
 7fa:	bf 2e       	mov	r11, r31
 7fc:	09 c0       	rjmp	.+18     	; 0x810 <__DATA_REGION_LENGTH__+0x10>
 7fe:	34 fe       	sbrs	r3, 4
 800:	0a c0       	rjmp	.+20     	; 0x816 <__DATA_REGION_LENGTH__+0x16>
 802:	29 2f       	mov	r18, r25
 804:	26 60       	ori	r18, 0x06	; 6
 806:	b2 2e       	mov	r11, r18
 808:	06 c0       	rjmp	.+12     	; 0x816 <__DATA_REGION_LENGTH__+0x16>
 80a:	28 e0       	ldi	r18, 0x08	; 8
 80c:	30 e0       	ldi	r19, 0x00	; 0
 80e:	05 c0       	rjmp	.+10     	; 0x81a <__DATA_REGION_LENGTH__+0x1a>
 810:	20 e1       	ldi	r18, 0x10	; 16
 812:	30 e0       	ldi	r19, 0x00	; 0
 814:	02 c0       	rjmp	.+4      	; 0x81a <__DATA_REGION_LENGTH__+0x1a>
 816:	20 e1       	ldi	r18, 0x10	; 16
 818:	32 e0       	ldi	r19, 0x02	; 2
 81a:	f8 01       	movw	r30, r16
 81c:	b7 fe       	sbrs	r11, 7
 81e:	07 c0       	rjmp	.+14     	; 0x82e <__DATA_REGION_LENGTH__+0x2e>
 820:	60 81       	ld	r22, Z
 822:	71 81       	ldd	r23, Z+1	; 0x01
 824:	82 81       	ldd	r24, Z+2	; 0x02
 826:	93 81       	ldd	r25, Z+3	; 0x03
 828:	0c 5f       	subi	r16, 0xFC	; 252
 82a:	1f 4f       	sbci	r17, 0xFF	; 255
 82c:	06 c0       	rjmp	.+12     	; 0x83a <__DATA_REGION_LENGTH__+0x3a>
 82e:	60 81       	ld	r22, Z
 830:	71 81       	ldd	r23, Z+1	; 0x01
 832:	80 e0       	ldi	r24, 0x00	; 0
 834:	90 e0       	ldi	r25, 0x00	; 0
 836:	0e 5f       	subi	r16, 0xFE	; 254
 838:	1f 4f       	sbci	r17, 0xFF	; 255
 83a:	a3 01       	movw	r20, r6
 83c:	0e 94 02 05 	call	0xa04	; 0xa04 <__ultoa_invert>
 840:	88 2e       	mov	r8, r24
 842:	86 18       	sub	r8, r6
 844:	fb 2d       	mov	r31, r11
 846:	ff 77       	andi	r31, 0x7F	; 127
 848:	3f 2e       	mov	r3, r31
 84a:	36 fe       	sbrs	r3, 6
 84c:	0d c0       	rjmp	.+26     	; 0x868 <__DATA_REGION_LENGTH__+0x68>
 84e:	23 2d       	mov	r18, r3
 850:	2e 7f       	andi	r18, 0xFE	; 254
 852:	a2 2e       	mov	r10, r18
 854:	89 14       	cp	r8, r9
 856:	58 f4       	brcc	.+22     	; 0x86e <__DATA_REGION_LENGTH__+0x6e>
 858:	34 fe       	sbrs	r3, 4
 85a:	0b c0       	rjmp	.+22     	; 0x872 <__DATA_REGION_LENGTH__+0x72>
 85c:	32 fc       	sbrc	r3, 2
 85e:	09 c0       	rjmp	.+18     	; 0x872 <__DATA_REGION_LENGTH__+0x72>
 860:	83 2d       	mov	r24, r3
 862:	8e 7e       	andi	r24, 0xEE	; 238
 864:	a8 2e       	mov	r10, r24
 866:	05 c0       	rjmp	.+10     	; 0x872 <__DATA_REGION_LENGTH__+0x72>
 868:	b8 2c       	mov	r11, r8
 86a:	a3 2c       	mov	r10, r3
 86c:	03 c0       	rjmp	.+6      	; 0x874 <__DATA_REGION_LENGTH__+0x74>
 86e:	b8 2c       	mov	r11, r8
 870:	01 c0       	rjmp	.+2      	; 0x874 <__DATA_REGION_LENGTH__+0x74>
 872:	b9 2c       	mov	r11, r9
 874:	a4 fe       	sbrs	r10, 4
 876:	0f c0       	rjmp	.+30     	; 0x896 <__DATA_REGION_LENGTH__+0x96>
 878:	fe 01       	movw	r30, r28
 87a:	e8 0d       	add	r30, r8
 87c:	f1 1d       	adc	r31, r1
 87e:	80 81       	ld	r24, Z
 880:	80 33       	cpi	r24, 0x30	; 48
 882:	21 f4       	brne	.+8      	; 0x88c <__DATA_REGION_LENGTH__+0x8c>
 884:	9a 2d       	mov	r25, r10
 886:	99 7e       	andi	r25, 0xE9	; 233
 888:	a9 2e       	mov	r10, r25
 88a:	09 c0       	rjmp	.+18     	; 0x89e <__DATA_REGION_LENGTH__+0x9e>
 88c:	a2 fe       	sbrs	r10, 2
 88e:	06 c0       	rjmp	.+12     	; 0x89c <__DATA_REGION_LENGTH__+0x9c>
 890:	b3 94       	inc	r11
 892:	b3 94       	inc	r11
 894:	04 c0       	rjmp	.+8      	; 0x89e <__DATA_REGION_LENGTH__+0x9e>
 896:	8a 2d       	mov	r24, r10
 898:	86 78       	andi	r24, 0x86	; 134
 89a:	09 f0       	breq	.+2      	; 0x89e <__DATA_REGION_LENGTH__+0x9e>
 89c:	b3 94       	inc	r11
 89e:	a3 fc       	sbrc	r10, 3
 8a0:	11 c0       	rjmp	.+34     	; 0x8c4 <__DATA_REGION_LENGTH__+0xc4>
 8a2:	a0 fe       	sbrs	r10, 0
 8a4:	06 c0       	rjmp	.+12     	; 0x8b2 <__DATA_REGION_LENGTH__+0xb2>
 8a6:	b2 14       	cp	r11, r2
 8a8:	88 f4       	brcc	.+34     	; 0x8cc <__DATA_REGION_LENGTH__+0xcc>
 8aa:	28 0c       	add	r2, r8
 8ac:	92 2c       	mov	r9, r2
 8ae:	9b 18       	sub	r9, r11
 8b0:	0e c0       	rjmp	.+28     	; 0x8ce <__DATA_REGION_LENGTH__+0xce>
 8b2:	b2 14       	cp	r11, r2
 8b4:	60 f4       	brcc	.+24     	; 0x8ce <__DATA_REGION_LENGTH__+0xce>
 8b6:	b6 01       	movw	r22, r12
 8b8:	80 e2       	ldi	r24, 0x20	; 32
 8ba:	90 e0       	ldi	r25, 0x00	; 0
 8bc:	0e 94 c6 04 	call	0x98c	; 0x98c <fputc>
 8c0:	b3 94       	inc	r11
 8c2:	f7 cf       	rjmp	.-18     	; 0x8b2 <__DATA_REGION_LENGTH__+0xb2>
 8c4:	b2 14       	cp	r11, r2
 8c6:	18 f4       	brcc	.+6      	; 0x8ce <__DATA_REGION_LENGTH__+0xce>
 8c8:	2b 18       	sub	r2, r11
 8ca:	02 c0       	rjmp	.+4      	; 0x8d0 <__DATA_REGION_LENGTH__+0xd0>
 8cc:	98 2c       	mov	r9, r8
 8ce:	21 2c       	mov	r2, r1
 8d0:	a4 fe       	sbrs	r10, 4
 8d2:	10 c0       	rjmp	.+32     	; 0x8f4 <__DATA_REGION_LENGTH__+0xf4>
 8d4:	b6 01       	movw	r22, r12
 8d6:	80 e3       	ldi	r24, 0x30	; 48
 8d8:	90 e0       	ldi	r25, 0x00	; 0
 8da:	0e 94 c6 04 	call	0x98c	; 0x98c <fputc>
 8de:	a2 fe       	sbrs	r10, 2
 8e0:	17 c0       	rjmp	.+46     	; 0x910 <__stack+0x11>
 8e2:	a1 fc       	sbrc	r10, 1
 8e4:	03 c0       	rjmp	.+6      	; 0x8ec <__DATA_REGION_LENGTH__+0xec>
 8e6:	88 e7       	ldi	r24, 0x78	; 120
 8e8:	90 e0       	ldi	r25, 0x00	; 0
 8ea:	02 c0       	rjmp	.+4      	; 0x8f0 <__DATA_REGION_LENGTH__+0xf0>
 8ec:	88 e5       	ldi	r24, 0x58	; 88
 8ee:	90 e0       	ldi	r25, 0x00	; 0
 8f0:	b6 01       	movw	r22, r12
 8f2:	0c c0       	rjmp	.+24     	; 0x90c <__stack+0xd>
 8f4:	8a 2d       	mov	r24, r10
 8f6:	86 78       	andi	r24, 0x86	; 134
 8f8:	59 f0       	breq	.+22     	; 0x910 <__stack+0x11>
 8fa:	a1 fe       	sbrs	r10, 1
 8fc:	02 c0       	rjmp	.+4      	; 0x902 <__stack+0x3>
 8fe:	8b e2       	ldi	r24, 0x2B	; 43
 900:	01 c0       	rjmp	.+2      	; 0x904 <__stack+0x5>
 902:	80 e2       	ldi	r24, 0x20	; 32
 904:	a7 fc       	sbrc	r10, 7
 906:	8d e2       	ldi	r24, 0x2D	; 45
 908:	b6 01       	movw	r22, r12
 90a:	90 e0       	ldi	r25, 0x00	; 0
 90c:	0e 94 c6 04 	call	0x98c	; 0x98c <fputc>
 910:	89 14       	cp	r8, r9
 912:	38 f4       	brcc	.+14     	; 0x922 <__stack+0x23>
 914:	b6 01       	movw	r22, r12
 916:	80 e3       	ldi	r24, 0x30	; 48
 918:	90 e0       	ldi	r25, 0x00	; 0
 91a:	0e 94 c6 04 	call	0x98c	; 0x98c <fputc>
 91e:	9a 94       	dec	r9
 920:	f7 cf       	rjmp	.-18     	; 0x910 <__stack+0x11>
 922:	8a 94       	dec	r8
 924:	f3 01       	movw	r30, r6
 926:	e8 0d       	add	r30, r8
 928:	f1 1d       	adc	r31, r1
 92a:	80 81       	ld	r24, Z
 92c:	b6 01       	movw	r22, r12
 92e:	90 e0       	ldi	r25, 0x00	; 0
 930:	0e 94 c6 04 	call	0x98c	; 0x98c <fputc>
 934:	81 10       	cpse	r8, r1
 936:	f5 cf       	rjmp	.-22     	; 0x922 <__stack+0x23>
 938:	22 20       	and	r2, r2
 93a:	09 f4       	brne	.+2      	; 0x93e <__stack+0x3f>
 93c:	42 ce       	rjmp	.-892    	; 0x5c2 <vfprintf+0x24>
 93e:	b6 01       	movw	r22, r12
 940:	80 e2       	ldi	r24, 0x20	; 32
 942:	90 e0       	ldi	r25, 0x00	; 0
 944:	0e 94 c6 04 	call	0x98c	; 0x98c <fputc>
 948:	2a 94       	dec	r2
 94a:	f6 cf       	rjmp	.-20     	; 0x938 <__stack+0x39>
 94c:	f6 01       	movw	r30, r12
 94e:	86 81       	ldd	r24, Z+6	; 0x06
 950:	97 81       	ldd	r25, Z+7	; 0x07
 952:	02 c0       	rjmp	.+4      	; 0x958 <__stack+0x59>
 954:	8f ef       	ldi	r24, 0xFF	; 255
 956:	9f ef       	ldi	r25, 0xFF	; 255
 958:	2b 96       	adiw	r28, 0x0b	; 11
 95a:	e2 e1       	ldi	r30, 0x12	; 18
 95c:	0c 94 7c 05 	jmp	0xaf8	; 0xaf8 <__epilogue_restores__>

00000960 <strnlen_P>:
 960:	fc 01       	movw	r30, r24
 962:	05 90       	lpm	r0, Z+
 964:	61 50       	subi	r22, 0x01	; 1
 966:	70 40       	sbci	r23, 0x00	; 0
 968:	01 10       	cpse	r0, r1
 96a:	d8 f7       	brcc	.-10     	; 0x962 <strnlen_P+0x2>
 96c:	80 95       	com	r24
 96e:	90 95       	com	r25
 970:	8e 0f       	add	r24, r30
 972:	9f 1f       	adc	r25, r31
 974:	08 95       	ret

00000976 <strnlen>:
 976:	fc 01       	movw	r30, r24
 978:	61 50       	subi	r22, 0x01	; 1
 97a:	70 40       	sbci	r23, 0x00	; 0
 97c:	01 90       	ld	r0, Z+
 97e:	01 10       	cpse	r0, r1
 980:	d8 f7       	brcc	.-10     	; 0x978 <strnlen+0x2>
 982:	80 95       	com	r24
 984:	90 95       	com	r25
 986:	8e 0f       	add	r24, r30
 988:	9f 1f       	adc	r25, r31
 98a:	08 95       	ret

0000098c <fputc>:
 98c:	0f 93       	push	r16
 98e:	1f 93       	push	r17
 990:	cf 93       	push	r28
 992:	df 93       	push	r29
 994:	fb 01       	movw	r30, r22
 996:	23 81       	ldd	r18, Z+3	; 0x03
 998:	21 fd       	sbrc	r18, 1
 99a:	03 c0       	rjmp	.+6      	; 0x9a2 <fputc+0x16>
 99c:	8f ef       	ldi	r24, 0xFF	; 255
 99e:	9f ef       	ldi	r25, 0xFF	; 255
 9a0:	2c c0       	rjmp	.+88     	; 0x9fa <fputc+0x6e>
 9a2:	22 ff       	sbrs	r18, 2
 9a4:	16 c0       	rjmp	.+44     	; 0x9d2 <fputc+0x46>
 9a6:	46 81       	ldd	r20, Z+6	; 0x06
 9a8:	57 81       	ldd	r21, Z+7	; 0x07
 9aa:	24 81       	ldd	r18, Z+4	; 0x04
 9ac:	35 81       	ldd	r19, Z+5	; 0x05
 9ae:	42 17       	cp	r20, r18
 9b0:	53 07       	cpc	r21, r19
 9b2:	44 f4       	brge	.+16     	; 0x9c4 <fputc+0x38>
 9b4:	a0 81       	ld	r26, Z
 9b6:	b1 81       	ldd	r27, Z+1	; 0x01
 9b8:	9d 01       	movw	r18, r26
 9ba:	2f 5f       	subi	r18, 0xFF	; 255
 9bc:	3f 4f       	sbci	r19, 0xFF	; 255
 9be:	31 83       	std	Z+1, r19	; 0x01
 9c0:	20 83       	st	Z, r18
 9c2:	8c 93       	st	X, r24
 9c4:	26 81       	ldd	r18, Z+6	; 0x06
 9c6:	37 81       	ldd	r19, Z+7	; 0x07
 9c8:	2f 5f       	subi	r18, 0xFF	; 255
 9ca:	3f 4f       	sbci	r19, 0xFF	; 255
 9cc:	37 83       	std	Z+7, r19	; 0x07
 9ce:	26 83       	std	Z+6, r18	; 0x06
 9d0:	14 c0       	rjmp	.+40     	; 0x9fa <fputc+0x6e>
 9d2:	8b 01       	movw	r16, r22
 9d4:	ec 01       	movw	r28, r24
 9d6:	fb 01       	movw	r30, r22
 9d8:	00 84       	ldd	r0, Z+8	; 0x08
 9da:	f1 85       	ldd	r31, Z+9	; 0x09
 9dc:	e0 2d       	mov	r30, r0
 9de:	09 95       	icall
 9e0:	89 2b       	or	r24, r25
 9e2:	e1 f6       	brne	.-72     	; 0x99c <fputc+0x10>
 9e4:	d8 01       	movw	r26, r16
 9e6:	16 96       	adiw	r26, 0x06	; 6
 9e8:	8d 91       	ld	r24, X+
 9ea:	9c 91       	ld	r25, X
 9ec:	17 97       	sbiw	r26, 0x07	; 7
 9ee:	01 96       	adiw	r24, 0x01	; 1
 9f0:	17 96       	adiw	r26, 0x07	; 7
 9f2:	9c 93       	st	X, r25
 9f4:	8e 93       	st	-X, r24
 9f6:	16 97       	sbiw	r26, 0x06	; 6
 9f8:	ce 01       	movw	r24, r28
 9fa:	df 91       	pop	r29
 9fc:	cf 91       	pop	r28
 9fe:	1f 91       	pop	r17
 a00:	0f 91       	pop	r16
 a02:	08 95       	ret

00000a04 <__ultoa_invert>:
 a04:	fa 01       	movw	r30, r20
 a06:	aa 27       	eor	r26, r26
 a08:	28 30       	cpi	r18, 0x08	; 8
 a0a:	51 f1       	breq	.+84     	; 0xa60 <__ultoa_invert+0x5c>
 a0c:	20 31       	cpi	r18, 0x10	; 16
 a0e:	81 f1       	breq	.+96     	; 0xa70 <__ultoa_invert+0x6c>
 a10:	e8 94       	clt
 a12:	6f 93       	push	r22
 a14:	6e 7f       	andi	r22, 0xFE	; 254
 a16:	6e 5f       	subi	r22, 0xFE	; 254
 a18:	7f 4f       	sbci	r23, 0xFF	; 255
 a1a:	8f 4f       	sbci	r24, 0xFF	; 255
 a1c:	9f 4f       	sbci	r25, 0xFF	; 255
 a1e:	af 4f       	sbci	r26, 0xFF	; 255
 a20:	b1 e0       	ldi	r27, 0x01	; 1
 a22:	3e d0       	rcall	.+124    	; 0xaa0 <__ultoa_invert+0x9c>
 a24:	b4 e0       	ldi	r27, 0x04	; 4
 a26:	3c d0       	rcall	.+120    	; 0xaa0 <__ultoa_invert+0x9c>
 a28:	67 0f       	add	r22, r23
 a2a:	78 1f       	adc	r23, r24
 a2c:	89 1f       	adc	r24, r25
 a2e:	9a 1f       	adc	r25, r26
 a30:	a1 1d       	adc	r26, r1
 a32:	68 0f       	add	r22, r24
 a34:	79 1f       	adc	r23, r25
 a36:	8a 1f       	adc	r24, r26
 a38:	91 1d       	adc	r25, r1
 a3a:	a1 1d       	adc	r26, r1
 a3c:	6a 0f       	add	r22, r26
 a3e:	71 1d       	adc	r23, r1
 a40:	81 1d       	adc	r24, r1
 a42:	91 1d       	adc	r25, r1
 a44:	a1 1d       	adc	r26, r1
 a46:	20 d0       	rcall	.+64     	; 0xa88 <__ultoa_invert+0x84>
 a48:	09 f4       	brne	.+2      	; 0xa4c <__ultoa_invert+0x48>
 a4a:	68 94       	set
 a4c:	3f 91       	pop	r19
 a4e:	2a e0       	ldi	r18, 0x0A	; 10
 a50:	26 9f       	mul	r18, r22
 a52:	11 24       	eor	r1, r1
 a54:	30 19       	sub	r19, r0
 a56:	30 5d       	subi	r19, 0xD0	; 208
 a58:	31 93       	st	Z+, r19
 a5a:	de f6       	brtc	.-74     	; 0xa12 <__ultoa_invert+0xe>
 a5c:	cf 01       	movw	r24, r30
 a5e:	08 95       	ret
 a60:	46 2f       	mov	r20, r22
 a62:	47 70       	andi	r20, 0x07	; 7
 a64:	40 5d       	subi	r20, 0xD0	; 208
 a66:	41 93       	st	Z+, r20
 a68:	b3 e0       	ldi	r27, 0x03	; 3
 a6a:	0f d0       	rcall	.+30     	; 0xa8a <__ultoa_invert+0x86>
 a6c:	c9 f7       	brne	.-14     	; 0xa60 <__ultoa_invert+0x5c>
 a6e:	f6 cf       	rjmp	.-20     	; 0xa5c <__ultoa_invert+0x58>
 a70:	46 2f       	mov	r20, r22
 a72:	4f 70       	andi	r20, 0x0F	; 15
 a74:	40 5d       	subi	r20, 0xD0	; 208
 a76:	4a 33       	cpi	r20, 0x3A	; 58
 a78:	18 f0       	brcs	.+6      	; 0xa80 <__ultoa_invert+0x7c>
 a7a:	49 5d       	subi	r20, 0xD9	; 217
 a7c:	31 fd       	sbrc	r19, 1
 a7e:	40 52       	subi	r20, 0x20	; 32
 a80:	41 93       	st	Z+, r20
 a82:	02 d0       	rcall	.+4      	; 0xa88 <__ultoa_invert+0x84>
 a84:	a9 f7       	brne	.-22     	; 0xa70 <__ultoa_invert+0x6c>
 a86:	ea cf       	rjmp	.-44     	; 0xa5c <__ultoa_invert+0x58>
 a88:	b4 e0       	ldi	r27, 0x04	; 4
 a8a:	a6 95       	lsr	r26
 a8c:	97 95       	ror	r25
 a8e:	87 95       	ror	r24
 a90:	77 95       	ror	r23
 a92:	67 95       	ror	r22
 a94:	ba 95       	dec	r27
 a96:	c9 f7       	brne	.-14     	; 0xa8a <__ultoa_invert+0x86>
 a98:	00 97       	sbiw	r24, 0x00	; 0
 a9a:	61 05       	cpc	r22, r1
 a9c:	71 05       	cpc	r23, r1
 a9e:	08 95       	ret
 aa0:	9b 01       	movw	r18, r22
 aa2:	ac 01       	movw	r20, r24
 aa4:	0a 2e       	mov	r0, r26
 aa6:	06 94       	lsr	r0
 aa8:	57 95       	ror	r21
 aaa:	47 95       	ror	r20
 aac:	37 95       	ror	r19
 aae:	27 95       	ror	r18
 ab0:	ba 95       	dec	r27
 ab2:	c9 f7       	brne	.-14     	; 0xaa6 <__ultoa_invert+0xa2>
 ab4:	62 0f       	add	r22, r18
 ab6:	73 1f       	adc	r23, r19
 ab8:	84 1f       	adc	r24, r20
 aba:	95 1f       	adc	r25, r21
 abc:	a0 1d       	adc	r26, r0
 abe:	08 95       	ret

00000ac0 <__prologue_saves__>:
 ac0:	2f 92       	push	r2
 ac2:	3f 92       	push	r3
 ac4:	4f 92       	push	r4
 ac6:	5f 92       	push	r5
 ac8:	6f 92       	push	r6
 aca:	7f 92       	push	r7
 acc:	8f 92       	push	r8
 ace:	9f 92       	push	r9
 ad0:	af 92       	push	r10
 ad2:	bf 92       	push	r11
 ad4:	cf 92       	push	r12
 ad6:	df 92       	push	r13
 ad8:	ef 92       	push	r14
 ada:	ff 92       	push	r15
 adc:	0f 93       	push	r16
 ade:	1f 93       	push	r17
 ae0:	cf 93       	push	r28
 ae2:	df 93       	push	r29
 ae4:	cd b7       	in	r28, 0x3d	; 61
 ae6:	de b7       	in	r29, 0x3e	; 62
 ae8:	ca 1b       	sub	r28, r26
 aea:	db 0b       	sbc	r29, r27
 aec:	0f b6       	in	r0, 0x3f	; 63
 aee:	f8 94       	cli
 af0:	de bf       	out	0x3e, r29	; 62
 af2:	0f be       	out	0x3f, r0	; 63
 af4:	cd bf       	out	0x3d, r28	; 61
 af6:	09 94       	ijmp

00000af8 <__epilogue_restores__>:
 af8:	2a 88       	ldd	r2, Y+18	; 0x12
 afa:	39 88       	ldd	r3, Y+17	; 0x11
 afc:	48 88       	ldd	r4, Y+16	; 0x10
 afe:	5f 84       	ldd	r5, Y+15	; 0x0f
 b00:	6e 84       	ldd	r6, Y+14	; 0x0e
 b02:	7d 84       	ldd	r7, Y+13	; 0x0d
 b04:	8c 84       	ldd	r8, Y+12	; 0x0c
 b06:	9b 84       	ldd	r9, Y+11	; 0x0b
 b08:	aa 84       	ldd	r10, Y+10	; 0x0a
 b0a:	b9 84       	ldd	r11, Y+9	; 0x09
 b0c:	c8 84       	ldd	r12, Y+8	; 0x08
 b0e:	df 80       	ldd	r13, Y+7	; 0x07
 b10:	ee 80       	ldd	r14, Y+6	; 0x06
 b12:	fd 80       	ldd	r15, Y+5	; 0x05
 b14:	0c 81       	ldd	r16, Y+4	; 0x04
 b16:	1b 81       	ldd	r17, Y+3	; 0x03
 b18:	aa 81       	ldd	r26, Y+2	; 0x02
 b1a:	b9 81       	ldd	r27, Y+1	; 0x01
 b1c:	ce 0f       	add	r28, r30
 b1e:	d1 1d       	adc	r29, r1
 b20:	0f b6       	in	r0, 0x3f	; 63
 b22:	f8 94       	cli
 b24:	de bf       	out	0x3e, r29	; 62
 b26:	0f be       	out	0x3f, r0	; 63
 b28:	cd bf       	out	0x3d, r28	; 61
 b2a:	ed 01       	movw	r28, r26
 b2c:	08 95       	ret

00000b2e <_exit>:
 b2e:	f8 94       	cli

00000b30 <__stop_program>:
 b30:	ff cf       	rjmp	.-2      	; 0xb30 <__stop_program>
